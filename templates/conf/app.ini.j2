#jinja2: trim_blocks: True, lstrip_blocks: True
; {{ ansible_managed }}

; This file lists the default values used by Gitea
;; Copy required sections to your own app.ini (default is custom/conf/app.ini)
;; and modify as needed.
;; Do not copy the whole file as-is, as it contains some invalid sections for illustrative purposes.
;; If you don't know what a setting is you should not set it.
;;
;; see https://docs.gitea.io/en-us/config-cheat-sheet/ for additional documentation.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Default Configuration (non-`app.ini` configuration)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; These values are environment-dependent but form the basis of a lot of values. They will be
;; reported as part of the default configuration when running `gitea --help` or on start-up. The order they are emitted there is slightly different but we will list them here in the order they are set-up.
;;
;; - _`AppPath`_: This is the absolute path of the running gitea binary.
;; - _`AppWorkPath`_: This refers to "working path" of the `gitea` binary. It is determined by using the first set thing in the following hierarchy:
;;   - The `--work-path` flag passed to the binary
;;   - The environment variable `$GITEA_WORK_DIR`
;;   - A built-in value set at build time (see building from source)
;;   - Otherwise it defaults to the directory of the _`AppPath`_
;;   - If any of the above are relative paths then they are made absolute against
;; the directory of the _`AppPath`_
;; - _`CustomPath`_: This is the base directory for custom templates and other options.
;; It is determined by using the first set thing in the following hierarchy:
;;   - The `--custom-path` flag passed to the binary
;;   - The environment variable `$GITEA_CUSTOM`
;;   - A built-in value set at build time (see building from source)
;;   - Otherwise it defaults to _`AppWorkPath`_`/custom`
;;   - If any of the above are relative paths then they are made absolute against the
;; the directory of the _`AppWorkPath`_
;; - _`CustomConf`_: This is the path to the `app.ini` file.
;;   - The `--config` flag passed to the binary
;;   - A built-in value set at build time (see building from source)
;;   - Otherwise it defaults to _`CustomPath`_`/conf/app.ini`
;;   - If any of the above are relative paths then they are made absolute against the
;; the directory of the _`CustomPath`_
;;
;; In addition there is _`StaticRootPath`_ which can be set as a built-in at build time, but will otherwise default to _`AppWorkPath`_

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; General Settings
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; App name that shows in every page title
APP_NAME = {{ gitea_name }}
;;
;; RUN_USER will automatically detect the current user - but you can set it here change it if you run locally
; RUN_USER = ; git
;;
;; Application run mode, affects performance and debugging. Either "dev", "prod" or "test", default is "prod"
RUN_MODE = {{ gitea_run_mode }}

{% if gitea_actions is defined and
      gitea_actions | count > 0 and
      gitea_actions.enabled | default('false') | bool %}
[actions]
ENABLED = {{ gitea_actions.enabled | default('false') | bool | ternary('true', 'false') }}
  {% if gitea_actions.default_actions_url is defined and
        gitea_actions.default_actions_url | string | length > 0 %}
DEFAULT_ACTIONS_URL = {{ gitea_actions.default_actions_url }}
  {% endif %}
{% endif %}

{% if gitea_admin is defined and
      gitea_admin | count > 0 %}
[admin]
  {% if gitea_admin.disable_regular_org_creation | default('') | string | length > 0 %}
DISABLE_REGULAR_ORG_CREATION = {{ gitea_admin.disable_regular_org_creation | default('false') | bool | ternary('true', 'false') }}
  {% endif %}
  {% if gitea_admin.default_email_notifications | default('') | string | length > 0 and
        gitea_admin.default_email_notifications in ["enabled", "onmention", "disabled"] %}
DEFAULT_EMAIL_NOTIFICATIONS = {{ gitea_admin.default_email_notifications }}
  {% endif %}
{% endif %}

{% if gitea_api is defined and
      gitea_api | count > 0 %}
[api]
  {% if gitea_api.enable_swagger | default('') | string | length > 0 %}
ENABLE_SWAGGER = {{ gitea_api.enable_swagger | default('false') | bool | ternary('true', 'false') }}
  {% endif %}
  {% if gitea_api.max_response_items | default('') | string | length > 0 %}
MAX_RESPONSE_ITEMS = {{ gitea_api.max_response_items }}
  {% endif %}
  {% if gitea_api.default_paging_num | default('') | string | length > 0 %}
DEFAULT_PAGING_NUM = {{ gitea_api.default_paging_num }}
  {% endif %}
  {% if gitea_api.default_git_trees_per_page | default('') | string | length > 0 %}
DEFAULT_GIT_TREES_PER_PAGE = {{ gitea_api.default_git_trees_per_page }}
  {% endif %}
  {% if gitea_api.default_max_blob_size | default('') | string | length > 0 %}
DEFAULT_MAX_BLOB_SIZE = {{ gitea_api.default_max_blob_size }}
  {% endif %}
{% endif %}

{% if gitea_attachment is defined and
      gitea_attachment | count > 0  and
      gitea_attachment.enabled | default('false') | bool %}
[attachment]
ENABLED = {{ gitea_attachment.enabled | default('false') | bool | ternary('true', 'false') }}
  {% if gitea_attachment.allowed_types is defined and
        gitea_attachment.allowed_types | count > 0 %}
ALLOWED_TYPES = {{ gitea_attachment.allowed_types | join(',') }}
  {% endif %}
  {% if gitea_attachment.max_size | default('') | string | length > 0 %}
MAX_SIZE = {{ gitea_attachment.max_size }}
  {% endif %}
  {% if gitea_attachment.max_files | default('') | string | length > 0 %}
MAX_FILES = {{ gitea_attachment.max_files }}
  {% endif %}
  {% if gitea_attachment.storage_type | default('') | string | length > 0 and
        gitea_attachment.storage_type in ["local", "minio"] %}
STORAGE_TYPE = {{ gitea_attachment.storage_type }}
  {% endif %}
  {% if gitea_attachment.storage_type | default('') | string | length > 0 and
        gitea_attachment.storage_type == "minio" and
        gitea_attachment.serve_direct | default('') | string | length > 0 %}
SERVE_DIRECT = {{ gitea_attachment.serve_direct | bool | ternary('true', 'false') }}
  {% endif %}
  {% if gitea_attachment.storage_type | default('') | string | length > 0 and
        gitea_attachment.storage_type == "local" and
        gitea_attachment.path | default('') | string | length > 0 %}
PATH = {{ gitea_attachment.path }}
  {% endif %}
  {% if gitea_attachment.storage_type | default('') | string | length > 0 and
        gitea_attachment.storage_type == "minio" and
        gitea_attachment.minio is defined and
        gitea_attachment.minio | count > 0 %}
    {% if gitea_attachment.minio.endpoint | default('') | string | length > 0 %}
MINIO_ENDPOINT = {{ gitea_attachment.minio.endpoint }}
    {% endif %}
    {% if gitea_attachment.minio.access_key_id | default('') | string | length > 0 %}
MINIO_ACCESS_KEY_ID = {{ gitea_attachment.minio.access_key_id }}
    {% endif %}
    {% if gitea_attachment.minio.secret_access_key | default('') | string | length > 0 %}
MINIO_SECRET_ACCESS_KEY = {{ gitea_attachment.minio.secret_access_key }}
    {% endif %}
    {% if gitea_attachment.minio.bucket | default('') | string | length > 0 %}
MINIO_BUCKET = {{ gitea_attachment.minio.bucket }}
    {% endif %}
    {% if gitea_attachment.minio.location | default('') | string | length > 0 %}
MINIO_LOCATION = {{ gitea_attachment.minio.location }}
    {% endif %}
    {% if gitea_attachment.minio.base_path | default('') | string | length > 0 %}
MINIO_BASE_PATH = {{ gitea_attachment.minio.base_path }}
    {% endif %}
    {% if gitea_attachment.minio.use_ssl | default('') | string | length > 0 %}
MINIO_USE_SSL = {{ gitea_attachment.minio.use_ssl | bool | ternary('true', 'false') }}
    {% endif %}
    {% if gitea_attachment.minio.insecure_skip_verify | default('') | string | length > 0 %}
MINIO_INSECURE_SKIP_VERIFY = {{ gitea_attachment.minio.insecure_skip_verify | bool | ternary('true', 'false') }}
    {% endif %}
    {% if gitea_attachment.minio.checksum_algorithm | default('') | string | length > 0 and
          gitea_attachment.minio.checksum_algorithm in ["default", "md5"] %}
MINIO_CHECKSUM_ALGORITHM = {{ gitea_attachment.minio.checksum_algorithm }}
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_cache is defined and
      gitea_cache | count > 0 and
      gitea_cache.enabled | default('false') | bool %}
[cache]
ENABLED = {{ gitea_cache.enabled | default('false') | bool | ternary('true', 'false') }}
  {% if gitea_cache.adapter  | default('') | string | length > 0 and
        gitea_cache.adapter in ["memory", "redis", "memcache", "twoqueue"] %}
ADAPTER = {{ gitea_cache.adapter }}
  {% endif %}
  {% if gitea_cache.adapter == "memory" and
        gitea_cache.interval | default('') | string | length > 0 %}
INTERVAL = {{ gitea_cache.interval }}
  {% endif %}
  {% if gitea_cache.adapter in ["redis", "memcache", "twoqueue"] and
        gitea_cache.host | default('') | string | length > 0 %}
HOST = {{ gitea_cache.host }}
  {% endif %}
  {% if gitea_cache.item_ttl | default('') | string | length > 0 %}
ITEM_TTL = {{ gitea_cache.item_ttl }}
  {% endif %}
  {% if gitea_cache.last_commit | default('') | string | length > 0 and
        gitea_cache.last_commit.enabled | default('false') | bool %}

[cache.last_commit]
ENABLED = {{ gitea_cache.last_commit.enabled | default('false') | bool | ternary('true', 'false') }}
    {% if gitea_cache.last_commit.item_ttl | default('') | string | length > 0 %}
ITEM_TTL = {{ gitea_cache.last_commit.item_ttl }}
    {% endif %}
    {% if gitea_cache.last_commit.commits_count | default('') | string | length > 0 %}
COMMITS_COUNT = 1000
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_camo is defined and
      gitea_camo | count > 0 and
      gitea_camo.enabled | default('false') | bool %}
[camo]
  {#
    validate first:
    server_url **is required** if camo is enabled.
    hmac_key **is required** if camo is enabled.
  #}
  {% set gitea_camo_enabled = gitea_camo.enabled %}
  {% if gitea_camo.server_url | default('') | string | length == 0 %}
;; server_url **is required** if camo is enabled.
    {% set gitea_camo_enabled = false %}
  {% endif %}
  {% if gitea_camo.hmac_key | default('') | string | length == 0 %}
;; hmac_key **is required** if camo is enabled.
    {% set gitea_camo_enabled = false %}
  {% endif %}
ENABLED = {{ gitea_camo_enabled | bool | ternary('true', 'false') }}
  {% if gitea_camo.server_url | default('') | string | length > 0 %}
SERVER_URL = {{ gitea_camo.server_url }}
  {% endif %}
  {% if gitea_camo.hmac_key | default('') | string | length > 0 %}
HMAC_KEY = {{ gitea_camo.hmac_key }}
  {% endif %}
  {% if gitea_camo.allways | default('') | string | length > 0 %}
ALLWAYS = {{ gitea_camo.allways | default('false') | bool | ternary('true', 'false') }}
  {% endif %}
{% endif %}

{% if gitea_cron is defined and
      gitea_cron | count > 0 and
      gitea_cron.enabled | default('false') | bool %}
[cron]
ENABLED = {{ gitea_cron.enabled | default('false') | bool | ternary('true', 'false') }}
  {% if gitea_cron.run_at_start | default('') | string | length > 0 %}
RUN_AT_START = {{ gitea_cron.run_at_start | bool | ternary('true', 'false') }}
  {% endif %}
  {% set cron_jobs = [
      "archive_cleanup", "update_mirrors", "repo_health_check", "check_repo_stats",
      "update_migration_poster_id", "sync_external_users", "cleanup_hook_task_table",
      "cleanup_packages", "delete_inactive_accounts", "delete_repo_archives",
      "git_gc_repos", "resync_all_sshkeys", "resync_all_hooks", "reinit_missing_repos",
      "delete_missing_repos", "delete_generated_repository_avatars", "delete_old_actions",
      "update_checker", "delete_old_system_notices", "gc_lfs"
      ] %}
  {% set cron_parameters = [
      "run_at_start", "notice_on_success", "schedule", "older_than",
      "pull_limit", "push_limit", "update_existing", "cleanup_type", "number_to_keep",
      "http_endpoint"
      ] %}
  {% for job in cron_jobs %}
    {% set d = gitea_cron.get(job) %}
    {% if d and d.enabled | default('false') | bool %}

      {% set _ = d.pop("enabled") %}
      {% if d.comment | default('') | string | length > 0 %}
;; {{ d.comment }}
        {% set _ = d.pop("comment") %}
      {% endif %}
[cron.{{ job }}]
      {% for k, v in d.items() %}
        {% if v | default('') | string | length > 0 %}
{{ k | upper }} = {{ v | bodsch.core.config_bool(true_as='true', false_as='false') }}
        {% endif %}
      {% endfor %}
    {% endif %}
  {% endfor %}
{% endif %}

{% if gitea_database is defined and
      gitea_database | count > 0 %}
  {% if gitea_database.db_type | default('') | string | length > 0 and
        gitea_database.db_type in ["mysql", "postgres", "mssql", "sqlite3"] %}
[database]
DB_TYPE = {{ gitea_database.db_type }}
    {% if gitea_database.host | default('') | string | length > 0 %}
HOST = {{ gitea_database.host }}
    {% endif %}
    {% if gitea_database.name | default('') | string | length > 0 %}
NAME = {{ gitea_database.name }}
    {% endif %}
    {% if gitea_database.user | default('') | string | length > 0 %}
USER = {{ gitea_database.user }}
    {% endif %}
    {% if gitea_database.db_type in ["mysql", "postgres", "mssql"] %}
      {% if gitea_database.passwd | default('') | string | length > 0 %}
PASSWD = {{ gitea_database.passwd }}
      {% endif %}
    {% endif %}
    {# DB specials ... #}
    {# mysql | mariadb #}
    {% if gitea_database.db_type == "mysql" %}
      {% if gitea_database.ssl_mode | default('') | string | length > 0 and
            gitea_database.ssl_mode in ["false", "true", "skip-verify"] %}
        {% if gitea_database.ssl_mode != "skip-verify" %}
SSL_MODE = {{ gitea_database.ssl_mode | bodsch.core.config_bool(true_as='true', false_as='false') }}
        {% else %}
SSL_MODE = {{ gitea_database.ssl_mode }}
        {% endif %}
      {% endif %}
      {% if gitea_database.charset | default('') | string | length > 0 %}
CHARSET = {{ gitea_database.charset }}
      {% endif %}
    {% endif %}
    {# postgres #}
    {% if gitea_database.db_type == "postgres" %}
      {% if gitea_database.ssl_mode | default('') | string | length > 0 and
            gitea_database.ssl_mode in ["disable", "require", "verify-full"] %}
SSL_MODE = {{ gitea_database.ssl_mode }}
      {% endif %}
      {% if gitea_database.schema | default('') | string | length > 0 %}
SCHEMA = {{ gitea_database.schema }}
      {% endif %}
    {% endif %}
    {# sqlite #}
    {% if gitea_database.db_type == "sqlite3" %}
      {% if gitea_database.path | default('') | string | length > 0 %}
PATH = {{ gitea_database.path }}
      {% endif %}
      {% if gitea_database.sqlite_timeout | default('') | string | length > 0 %}
SQLITE_TIMEOUT = {{ gitea_database.sqlite_timeout }}
      {% if gitea_database.sqlite_journal_mode | default('') | string | length > 0 %}
      {% endif %}
SQLITE_JOURNAL_MODE = {{ gitea_database.sqlite_journal_mode }}
      {% endif %}
    {% endif %}
    {# mssql #}
    {% if gitea_database.db_type == "mssql" %}
      {# #}
    {% endif %}
    {% if gitea_database.iterate_buffer_size | default('') | string | length > 0 %}
ITERATE_BUFFER_SIZE = {{ gitea_database.iterate_buffer_size }}
    {% endif %}
    {% if gitea_database.log_sql | default('') | string | length > 0 %}
LOG_SQL = {{ gitea_database.log_sql | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_database.db_retries | default('') | string | length > 0 %}
DB_RETRIES = {{ gitea_database.db_retries }}
    {% endif %}
    {% if gitea_database.db_retry_backoff | default('') | string | length > 0 %}
DB_RETRY_BACKOFF = {{ gitea_database.db_retry_backoff }}
    {% endif %}
    {% if gitea_database.max_idle_conns | default('') | string | length > 0 %}
MAX_IDLE_CONNS = {{ gitea_database.max_idle_conns }}
    {% endif %}
    {% if gitea_database.conn_max_lifetime | default('') | string | length > 0 %}
CONN_MAX_LIFETIME = {{ gitea_database.conn_max_lifetime }}
    {% endif %}
    {% if gitea_database.max_open_conns | default('') | string | length > 0 %}
MAX_OPEN_CONNS = {{ gitea_database.max_open_conns }}
    {% endif %}
    {% if gitea_database.auto_migration | default('') | string | length > 0 %}
AUTO_MIGRATION = {{ gitea_database.auto_migration | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
  {% else %}
;; unkown database type
  {% endif %}
{% endif %}

{% if gitea_federation is defined and
      gitea_federation | count > 0 and
      gitea_federation.enabled | default('false') | bool %}
[federation]
ENABLED = {{ gitea_federation.enabled | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% if gitea_federation.share_user_statistics | default('') | string | length > 0 %}
SHARE_USER_STATISTICS = {{ gitea_federation.share_user_statistics | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_federation.max_size | default('') | string | length > 0 %}
MAX_SIZE = {{ gitea_federation.max_size }}
  {% endif %}
  {% if gitea_federation.algorithms | default('') | string | length > 0 %}
ALGORITHMS = {{ gitea_federation.algorithms | join(', ') }}
  {% endif %}
  {% if gitea_federation.digest_algorithm | default('') | string | length > 0 %}
DIGEST_ALGORITHM = {{ gitea_federation.digest_algorithm }}
  {% endif %}
  {% if gitea_federation.get_headers | default('') | string | length > 0 %}
GET_HEADERS = {{ gitea_federation.get_headers | join(', ') }}
  {% endif %}
  {% if gitea_federation.post_headers | default('') | string | length > 0 %}
POST_HEADERS = {{ gitea_federation.post_headers | join(', ') }}
  {% endif %}
{% endif %}

{% if gitea_git is defined and
      gitea_git | count > 0 %}
[git]
  {% if gitea_git.path | default('') | string | length > 0 %}
PATH = {{ gitea_git.path }}
  {% endif %}
  {% if gitea_git.home_path | default('') | string | length > 0 %}
HOME_PATH = {{ gitea_git.home_path }}
  {% endif %}
  {% if gitea_git.disable_diff_highlight | default('') | string | length > 0 %}
DISABLE_DIFF_HIGHLIGHT = {{ gitea_git.disable_diff_highlight | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_git.max_git_diff_lines | default('') | string | length > 0 %}
MAX_GIT_DIFF_LINES = {{ gitea_git.max_git_diff_lines }}
  {% endif %}
  {% if gitea_git.max_git_diff_line_characters | default('') | string | length > 0 %}
MAX_GIT_DIFF_LINE_CHARACTERS = {{ gitea_git.max_git_diff_line_characters }}
  {% endif %}
  {% if gitea_git.max_git_diff_files | default('') | string | length > 0 %}
MAX_GIT_DIFF_FILES = {{ gitea_git.max_git_diff_files }}
  {% endif %}
  {% if gitea_git.commits_range_size | default('') | string | length > 0 %}
COMMITS_RANGE_SIZE = {{ gitea_git.commits_range_size }}
  {% endif %}
  {% if gitea_git.branches_range_size | default('') | string | length > 0 %}
BRANCHES_RANGE_SIZE = {{ gitea_git.branches_range_size }}
  {% endif %}
  {% if gitea_git.gc_args | default('') | string | length > 0 %}
GC_ARGS = {{ gitea_git.gc_args }}
  {% endif %}
  {% if gitea_git.enable_auto_git_wire_protocol | default('') | string | length > 0 %}
ENABLE_AUTO_GIT_WIRE_PROTOCOL = {{ gitea_git.enable_auto_git_wire_protocol | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_git.pull_request_push_message | default('') | string | length > 0 %}
PULL_REQUEST_PUSH_MESSAGE = {{ gitea_git.pull_request_push_message | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_git.large_object_threshold | default('') | string | length > 0 %}
LARGE_OBJECT_THRESHOLD = {{ gitea_git.large_object_threshold }}
  {% endif %}
  {% if gitea_git.disable_core_protect_ntfs | default('') | string | length > 0 %}
DISABLE_CORE_PROTECT_NTFS = {{ gitea_git.disable_core_protect_ntfs | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_git.disable_partial_clone | default('') | string | length > 0 %}
DISABLE_PARTIAL_CLONE = {{  gitea_git.disable_partial_clone | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_git.timeout is defined and
        gitea_git.timeout | count > 0 %}
[git.timeout]
    {% if gitea_git.timeout.default | default('') | string | length > 0 %}
DEFAULT = {{ gitea_git.timeout.default }}
    {% endif %}
    {% if gitea_git.timeout.migrate | default('') | string | length > 0 %}
MIGRATE = {{ gitea_git.timeout.migrate }}
    {% endif %}
    {% if gitea_git.timeout.mirror | default('') | string | length > 0 %}
MIRROR = {{ gitea_git.timeout.mirror }}
    {% endif %}
    {% if gitea_git.timeout.clone | default('') | string | length > 0 %}
CLONE = {{ gitea_git.timeout.clone }}
    {% endif %}
    {% if gitea_git.timeout.pull | default('') | string | length > 0 %}
PULL = {{ gitea_git.timeout.pull }}
    {% endif %}
    {% if gitea_git.timeout.gc | default('') | string | length > 0 %}
GC = {{ gitea_git.timeout.gc }}
    {% endif %}
  {% endif %}
  {% if gitea_git.reflog is defined and
        gitea_git.reflog | count > 0 and
        gitea_git.reflog.enabled | default('false') | bool %}
[git.reflog]
ENABLED = {{ gitea_git.reflog.enabled | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% if gitea_git.reflog.expiration | default('') | string | length > 0 %}
EXPIRATION = {{ gitea_git.reflog.expiration }}
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_highlight is defined and
      gitea_highlight | count > 0 %}

{% endif %}

{% if gitea_i18n is defined and
      gitea_i18n | count > 0 %}
[i18n]
  {% if gitea_i18n.langs is defined and
        gitea_i18n.langs | count > 0 %}
LANGS = {{ gitea_i18n.langs | join(',') }}
  {% endif %}
  {% if gitea_i18n.names is defined and
        gitea_i18n.names | count > 0 %}
NAMES = {{ gitea_i18n.names | join(',') }}
  {% endif %}
{% endif %}

{% if gitea_indexer is defined and
      gitea_indexer | count > 0 %}
  {% if gitea_indexer.issue_indexer_type | default('') | string | length > 0 and
        gitea_indexer.issue_indexer_type in ["bleve", "db", "elasticsearch", "meilisearch"] %}
[indexer]
ISSUE_INDEXER_TYPE = {{ gitea_indexer.issue_indexer_type }}
    {% if gitea_indexer.issue_indexer_type == "bleve" and
          gitea_indexer.issue_indexer_path | default('') | string | length > 0 %}
ISSUE_INDEXER_PATH = {{ gitea_indexer.issue_indexer_path }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type in ["elasticsearch", "meilisearch"] and
          gitea_indexer.issue_indexer_conn_str | default('') | string | length > 0 %}
ISSUE_INDEXER_CONN_STR = {{ gitea_indexer.issue_indexer_conn_str }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type == "elasticsearch" and
          gitea_indexer.issue_indexer_name | default('') | string | length > 0 %}
ISSUE_INDEXER_NAME = {{ gitea_indexer.issue_indexer_name }}
    {% endif %}
    {% if gitea_indexer.startup_timeout | default('') | string | length > 0 %}
STARTUP_TIMEOUT = {{ gitea_indexer.startup_timeout }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_queue_type | default('') | string | length > 0 and
          gitea_indexer.issue_indexer_queue_type in ["channel", "levelqueue", "redis"] %}
;; **DEPRECATED** use settings in `[queue.issue_indexer]`.
ISSUE_INDEXER_QUEUE_TYPE = {{ gitea_indexer.issue_indexer_queue_type }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type == "levelqueue" and
          gitea_indexer.issue_indexer_queue_dir | default('') | string | length > 0 %}
;; **DEPRECATED** use settings in `[queue.issue_indexer]`.
ISSUE_INDEXER_QUEUE_DIR = {{ gitea_indexer.issue_indexer_queue_dir }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type in ["levelqueue", "redis"] and
          gitea_indexer.issue_indexer_queue_conn_str | default('') | string | length > 0 %}
;; **DEPRECATED** use settings in `[queue.issue_indexer]`.
ISSUE_INDEXER_QUEUE_CONN_STR = {{ gitea_indexer.issue_indexer_queue_conn_str }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_queue_batch_number | default('') | string | length > 0 %}
;; **DEPRECATED** use settings in `[queue.issue_indexer]`.
ISSUE_INDEXER_QUEUE_BATCH_NUMBER = {{ gitea_indexer.issue_indexer_queue_batch_number }}
    {% endif %}
    {% if gitea_indexer.repo_indexer_enabled | default('') | string | length > 0 %}
REPO_INDEXER_ENABLED = {{ gitea_indexer.repo_indexer_enabled | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type in ["bleve", "elasticsearch"] and
          gitea_indexer.issue_indexer_type | default('') | string | length > 0 %}
REPO_INDEXER_TYPE = {{ gitea_indexer.issue_indexer_type }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type == "bleve" and
          gitea_indexer.repo_indexer_path | default('') | string | length > 0 %}
REPO_INDEXER_PATH = {{ gitea_indexer.repo_indexer_path }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type == "elasticsearch" and
          gitea_indexer.repo_indexer_conn_str | default('') | string | length > 0 %}
REPO_INDEXER_CONN_STR = {{ gitea_indexer.repo_indexer_conn_str }}
    {% endif %}
    {% if gitea_indexer.issue_indexer_type == "elasticsearch" and
          gitea_indexer.repo_indexer_name | default('') | string | length > 0 %}
REPO_INDEXER_NAME = {{ gitea_indexer.repo_indexer_name }}
    {% endif %}
    {% if gitea_indexer.repo_indexer_include | count > 0 %}
REPO_INDEXER_INCLUDE = {{ gitea_indexer.repo_indexer_include | join(', ') }}
    {% endif %}
    {% if gitea_indexer.repo_indexer_exclude | count > 0 %}
REPO_INDEXER_EXCLUDE = {{ gitea_indexer.repo_indexer_exclude | join(', ') }}
    {% endif %}
    {% if gitea_indexer.update_buffer_len | default('') | string | length > 0 %}
;; **DEPRECATED** use settings in `[queue.issue_indexer]`.
UPDATE_BUFFER_LEN = {{ gitea_indexer.update_buffer_len }}
    {% endif %}
    {% if gitea_indexer.max_file_size | default('') | string | length > 0 %}
MAX_FILE_SIZE = {{ gitea_indexer.max_file_size }}
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_log is defined and
      gitea_log | count > 0 %}
[log]
  {% if gitea_log.root_path | default('') | string | length > 0 %}
ROOT_PATH = {{ gitea_log.root_path }}
  {% endif %}
  {% if gitea_log.mode | count > 0 %}
     {% set valid_log_mode = ["console", "file", "conn", "smtp", "database"] %}
     {% set log_mode = gitea_log.mode | bodsch.core.compare_list(compare_to_list=valid_log_mode) %}
MODE = {{ log_mode | join(', ') }}
  {% endif %}
  {% if gitea_log.level | default('') | string | length > 0 and
        gitea_log.level | lower in ["trace", "debug", "info", "warn", "error", "critical", "none"] %}
LEVEL = {{ gitea_log.level }}
  {% endif %}
  {% if gitea_log.disable_router_log | default('') | string | length > 0 %}
DISABLE_ROUTER_LOG = {{ gitea_log.disable_router_log | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_log.router | default('') | string | length > 0 %}
ROUTER = {{ gitea_log.router }}
  {% endif %}
  {% if gitea_log.enable_access_log | default('') | string | length > 0 %}
ENABLE_ACCESS_LOG = {{ gitea_log.enable_access_log | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_log.access | default('') | string | length > 0 %}
ACCESS = {{ gitea_log.access }}
  {% endif %}
  {% if gitea_log.access_log_template | default('') | string | length > 0 %}
  {#
    {{.Ctx.RemoteAddr}} - {{.Identity}} {{.Start.Format "[02/Jan/2006:15:04:05 -0700]" }} "{{.Ctx.Req.Method}} {{.Ctx.Req.URL.RequestURI}} {{.Ctx.Req.Proto}}" {{.ResponseWriter.Status}} {{.ResponseWriter.Size}} "{{.Ctx.Req.Referer}}\" \"{{.Ctx.Req.UserAgent}}"
  #}
ACCESS_LOG_TEMPLATE = {{ gitea_log.access_log_template }}
  {% endif %}
  {% if gitea_log.enable_ssh_log | default('') | string | length > 0 %}
ENABLE_SSH_LOG = {{ gitea_log.enable_ssh_log | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_log.stacktrace_level | default('') | string | length > 0 and
        gitea_log.stacktrace_level | lower in ["trace", "debug", "info", "warn", "error", "critical", "none"] %}
STACKTRACE_LEVEL = {{ gitea_log.stacktrace_level }}
  {% endif %}
  {% if gitea_log.buffer_len | default('') | string | length > 0 %}
BUFFER_LEN = {{ gitea_log.buffer_len }}
  {% endif %}
{% endif %}

{% if gitea_mailer is defined and
      gitea_mailer | count > 0 and
      gitea_mailer.enabled | bool %}
[mailer]
ENABLED = {{ gitea_mailer.enabled | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% if gitea_mailer.send_buffer_len | default('') | string | length > 0 %}
SEND_BUFFER_LEN = {{ gitea_mailer.send_buffer_len }}
  {% endif %}
;;
;; Prefix displayed before subject in mail
;SUBJECT_PREFIX =
;;
;; Mail server protocol. One of "smtp", "smtps", "smtp+starttls", "smtp+unix", "sendmail", "dummy".
;; - sendmail: use the operating system's `sendmail` command instead of SMTP. This is common on Linux systems.
;; - dummy: send email messages to the log as a testing phase.
;; If your provider does not explicitly say which protocol it uses but does provide a port,
;; you can set SMTP_PORT instead and this will be inferred.
;; (Before 1.18, see the notice, this was controlled via MAILER_TYPE and IS_TLS_ENABLED.)
;PROTOCOL =
;;
;; Mail server address, e.g. smtp.gmail.com.
;; For smtp+unix, this should be a path to a unix socket instead.
;; (Before 1.18, see the notice, this was combined with SMTP_PORT as HOST.)
;SMTP_ADDR =
;;
;; Mail server port. Common ports are:
;;   25:  insecure SMTP
;;   465: SMTP Secure
;;   587: StartTLS
;; If no protocol is specified, it will be inferred by this setting.
;; (Before 1.18, this was combined with SMTP_ADDR as HOST.)
;SMTP_PORT =
;;
;; Enable HELO operation. Defaults to true.
;ENABLE_HELO = true
;;
;; Custom hostname for HELO operation.
;; If no value is provided, one is retrieved from system.
;HELO_HOSTNAME =
;;
;; If set to `true`, completely ignores server certificate validation errors.
;; This option is unsafe. Consider adding the certificate to the system trust store instead.
;FORCE_TRUST_SERVER_CERT = false
;;
;; Use client certificate in connection.
;USE_CLIENT_CERT = false
;CLIENT_CERT_FILE = custom/mailer/cert.pem
;CLIENT_KEY_FILE = custom/mailer/key.pem
;;
;; Mail from address, RFC 5322. This can be just an email address, or the `"Name" <email@example.com>` format
;FROM =
;;
;; Sometimes it is helpful to use a different address on the envelope. Set this to use ENVELOPE_FROM as the from on the envelope. Set to `<>` to send an empty address.
;ENVELOPE_FROM =
;;
;; Mailer user name and password, if required by provider.
;USER =
;;
;; Use PASSWD = `your password` for quoting if you use special characters in the password.
;PASSWD =
;;
;; Send mails only in plain text, without HTML alternative
;SEND_AS_PLAIN_TEXT = false
;;
;; Specify an alternative sendmail binary
;SENDMAIL_PATH = sendmail
;;
;; Specify any extra sendmail arguments
;; WARNING: if your sendmail program interprets options you should set this to "--" or terminate these args with "--"
;SENDMAIL_ARGS =
;;
;; Timeout for Sendmail
;SENDMAIL_TIMEOUT = 5m
;;
;; convert \r\n to \n for Sendmail
;SENDMAIL_CONVERT_CRLF = true
{% endif %}

{% if gitea_markdown is defined and
      gitea_markdown | count > 0 %}
[markdown]
  {% if gitea_markdown.enable_hard_line_break_in_comments | default('') | string | length > 0 %}
ENABLE_HARD_LINE_BREAK_IN_COMMENTS = {{ gitea_markdown.enable_hard_line_break_in_comments | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_markdown.enable_hard_line_break_in_documents | default('') | string | length > 0 %}
ENABLE_HARD_LINE_BREAK_IN_DOCUMENTS = {{ gitea_markdown.enable_hard_line_break_in_documents | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_markdown.custom_url_schemes | count > 0 %}
CUSTOM_URL_SCHEMES = {{ gitea_markdown.custom_url_schemes | join(', ') }}
  {% endif %}
  {% if gitea_markdown.file_extensions | count > 0 %}
FILE_EXTENSIONS = {{ gitea_markdown.file_extensions | join(', ') }}
  {% endif %}
  {% if gitea_markdown.enable_math | default('') | string | length > 0 %}
ENABLE_MATH = {{ gitea_markdown.enable_math | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
{% endif %}

{% if gitea_markup is defined and
      gitea_markup | count > 0 %}
[markup]
  {% if gitea_markup.mermaid_max_source_characters | default('') | string | length > 0 %}
MERMAID_MAX_SOURCE_CHARACTERS = {{ gitea_markup.mermaid_max_source_characters }}
  {% endif %}
  {% if gitea_markup.sanitizer | count > 0 %}
    {% for i in gitea_markup.sanitizer %}

[markup.sanitizer.{{ i.id }}]
      {% if i.element | default('') | string | length > 0 %}
ELEMENT = {{ i.element }}
      {% endif %}
      {% if i.allow_attr | default('') | string | length > 0 %}
ALLOW_ATTR = {{ i.allow_attr }}
      {% endif %}
      {% if i.regexp | default('') | string | length > 0 %}
REGEXP = {{ i.regexp }}
      {% endif %}
    {% endfor %}
  {% endif %}
  {% if gitea_markup.asciidoc is defined and
        gitea_markup.asciidoc | count > 0 and
        gitea_markup.asciidoc.enabled | bool %}

[markup.asciidoc]
ENABLED = {{ gitea_markup.asciidoc.enabled | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% if gitea_markup.asciidoc.file_extensions | count > 0 %}
FILE_EXTENSIONS = {{ gitea_markup.asciidoc.file_extensions | join(', ') }}
    {% endif %}
    {% if gitea_markup.asciidoc.render_command | default('') | string | length > 0 %}
RENDER_COMMAND = "{{ gitea_markup.asciidoc.render_command }}"
    {% endif %}
    {% if gitea_markup.asciidoc.is_input_file | default('') | string | length > 0 %}
IS_INPUT_FILE = {{ gitea_markup.asciidoc.is_input_file | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_markup.asciidoc.render_content_mode | default('') | string | length > 0 and
          gitea_markup.asciidoc.render_content_mode in ["sanitized", "no-sanitizer", "iframe"] %}
RENDER_CONTENT_MODE = {{ gitea_markup.asciidoc.render_content_mode }}
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_metrics is defined and
      gitea_metrics | count > 0 and
      gitea_metrics.enabled | bool %}
[metrics]
ENABLED = {{ gitea_metrics.enabled | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% if gitea_metrics.token | default('') | string | length > 0 %}
;; If you want to add authorization, specify a token here
TOKEN = {{ gitea_metrics.token }}
  {% endif %}
  {% if gitea_metrics.enabled_issue_by_label | default('') | string | length > 0 %}
ENABLED_ISSUE_BY_LABEL = {{ gitea_metrics.enabled_issue_by_label | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_metrics.enabled_issue_by_repository | default('') | string | length > 0 %}
ENABLED_ISSUE_BY_REPOSITORY = {{ gitea_metrics.enabled_issue_by_repository | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
{% endif %}

{% if gitea_migrations is defined and
      gitea_migrations | count > 0 %}
[migrations]
  {% if gitea_migrations.max_attempts | default('') | string | length > 0 %}
MAX_ATTEMPTS = {{ gitea_migrations.max_attempts }}
  {% endif %}
  {% if gitea_migrations.retry_backoff | default('') | string | length > 0 %}
RETRY_BACKOFF = {{ gitea_migrations.retry_backoff }}
  {% endif %}
  {% if gitea_migrations.allowed_domains | count > 0 %}
ALLOWED_DOMAINS = {{ gitea_migrations.allowed_domains | join(', ') }}
  {% endif %}
  {% if gitea_migrations.blocked_domains | count > 0 %}
BLOCKED_DOMAINS = {{ gitea_migrations.blocked_domains | join(', ') }}
  {% endif %}
  {% if gitea_migrations.allow_localnetworks | default('') | string | length > 0 %}
ALLOW_LOCALNETWORKS = {{ gitea_migrations.allow_localnetworks | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
{% endif %}

{% if gitea_mirror is defined and
      gitea_mirror | count > 0 and
      gitea_mirror.enabled | bool %}
[mirror]
ENABLED = {{ gitea_mirror.enabled | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% if gitea_mirror.disable_new_pull | default('') | string | length > 0 %}
DISABLE_NEW_PULL = {{ gitea_mirror.disable_new_pull | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_mirror.disable_new_push | default('') | string | length > 0 %}
DISABLE_NEW_PUSH = {{ gitea_mirror.disable_new_push | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_mirror.default_interval | default('') | string | length > 0 %}
DEFAULT_INTERVAL = {{ gitea_mirror.default_interval }}
  {% endif %}
  {% if gitea_mirror.min_interval | default('') | string | length > 0 %}
MIN_INTERVAL = {{ gitea_mirror.min_interval }}
  {% endif %}
{% endif %}

{% if gitea_oauth2 is defined and
      gitea_oauth2 | count > 0 and
      gitea_oauth2.enabled | bool %}
[oauth2]
ENABLE = {{ gitea_oauth2.enabled | default('false') | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% if gitea_oauth2.jwt_signing_algorithm | default('') | string | length > 0 and
        gitea_oauth2.jwt_signing_algorithm in ["HS256", "HS384", "HS512", "RS256", "RS384", "RS512", "ES256", "ES384", "ES512", "EdDSA"] %}
JWT_SIGNING_ALGORITHM = {{ gitea_oauth2.jwt_signing_algorithm }}
  {% endif %}
  {% if gitea_oauth2.jwt_signing_algorithm in ["RS256", "RS384", "RS512", "ES256", "ES384", "ES512"] and
        gitea_oauth2.jwt_signing_private_key_file | default('') | string | length > 0 %}
JWT_SIGNING_PRIVATE_KEY_FILE = {{ gitea_oauth2.jwt_signing_private_key_file }}
  {% endif %}
  {% if gitea_oauth2.jwt_signing_algorithm in ["HS256", "HS384", "HS512"] and
        gitea_oauth2.jwt_secret | default('') | string | length > 0 %}
JWT_SECRET = {{ gitea_oauth2.jwt_secret }}
  {% endif %}
  {% if gitea_oauth2.access_token_expiration_time | default('') | string | length > 0 %}
ACCESS_TOKEN_EXPIRATION_TIME = {{ gitea_oauth2.access_token_expiration_time }}
  {% endif %}
  {% if gitea_oauth2.refresh_token_expiration_time | default('') | string | length > 0 %}
REFRESH_TOKEN_EXPIRATION_TIME = {{ gitea_oauth2.refresh_token_expiration_time }}
  {% endif %}
  {% if gitea_oauth2.invalidate_refresh_tokens | default('') | string | length > 0 %}
INVALIDATE_REFRESH_TOKENS = {{ gitea_oauth2.invalidate_refresh_tokens | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_oauth2.max_token_length | default('') | string | length > 0 %}
MAX_TOKEN_LENGTH = {{ gitea_oauth2.max_token_length }}
  {% endif %}
{% endif %}

{% if gitea_oauth2_client is defined and
      gitea_oauth2_client | count > 0 %}
[oauth2_client]
  {% if gitea_oauth2_client.register_email_confirm | default('') | string | length > 0 %}
REGISTER_EMAIL_CONFIRM = {{ gitea_oauth2_client.register_email_confirm }}
  {% endif %}
  {% if gitea_oauth2_client.openid_connect_scopes | default('') | string | length > 0 %}
OPENID_CONNECT_SCOPES = {{ gitea_oauth2_client.openid_connect_scopes }}
  {% endif %}
  {% if gitea_oauth2_client.enable_auto_registration | default('') | string | length > 0 %}
ENABLE_AUTO_REGISTRATION = {{ gitea_oauth2_client.enable_auto_registration | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_oauth2_client.username | default('') | string | length > 0 and
        gitea_oauth2_client.username in ["userid", "nickname", "email"] %}
USERNAME = {{ gitea_oauth2_client.username }}
  {% endif %}
  {% if gitea_oauth2_client.update_avatar | default('') | string | length > 0 %}
UPDATE_AVATAR = {{ gitea_oauth2_client.update_avatar | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_oauth2_client.account_linking | default('') | string | length > 0 and
        gitea_oauth2_client.account_linking in ["disabled", "login", "auto"] %}
ACCOUNT_LINKING = {{ gitea_oauth2_client.account_linking }}
  {% endif %}
{% endif %}

{% if gitea_openid is defined and
      gitea_openid | count > 0 %}
[openid]
  {% if gitea_openid.enable_openid_signin | default('') | string | length > 0 %}
ENABLE_OPENID_SIGNIN = {{ gitea_openid.enable_openid_signin | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_openid.enable_openid_signup | default('') | string | length > 0 %}
ENABLE_OPENID_SIGNUP = {{ gitea_openid.enable_openid_signup | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_openid.whitelisted_uris | count > 0 %}
WHITELISTED_URIS = {{ gitea_openid.whitelisted_uris | join(' ') }}
  {% endif %}
  {% if gitea_openid.blacklisted_uris | count > 0 %}
BLACKLISTED_URIS = {{ gitea_openid.blacklisted_uris | join(' ') }}
  {% endif %}
{% endif %}

{% if gitea_other is defined and
      gitea_other | count > 0 %}
[other]
  {% if gitea_other.show_footer_branding | default('') | string | length > 0 %}
SHOW_FOOTER_BRANDING = {{ gitea_other.show_footer_branding | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_other.show_footer_version | default('') | string | length > 0 %}
SHOW_FOOTER_VERSION = {{ gitea_other.show_footer_version | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_other.show_footer_template_load_time | default('') | string | length > 0 %}
SHOW_FOOTER_TEMPLATE_LOAD_TIME = {{ gitea_other.show_footer_template_load_time | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_other.enable_sitemap | default('') | string | length > 0 %}
ENABLE_SITEMAP = {{ gitea_other.enable_sitemap | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_other.enable_feed | default('') | string | length > 0 %}
ENABLE_FEED = {{ gitea_other.enable_feed | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
{% endif %}

{% if gitea_packages is defined and
      gitea_packages | count > 0 and
      gitea_packages.enabled | bool %}
[packages]
ENABLED = {{ gitea_packages.enabled | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% if gitea_packages.chunked_upload_path | default('') | string | length > 0 %}
CHUNKED_UPLOAD_PATH = {{ gitea_packages.chunked_upload_path }}
  {% endif %}
  {% if gitea_packages.limit_total_owner_count | default('') | string | length > 0 %}
LIMIT_TOTAL_OWNER_COUNT = {{ gitea_packages.limit_total_owner_count }}
  {% endif %}
  {% if gitea_packages.limit_total_owner_size | default('') | string | length > 0 %}
LIMIT_TOTAL_OWNER_SIZE = {{ gitea_packages.limit_total_owner_size }}
  {% endif %}
  {% if gitea_packages.limit_size_cargo | default('') | string | length > 0 %}
LIMIT_SIZE_CARGO = {{ gitea_packages.limit_size_cargo }}
  {% endif %}
  {% if gitea_packages.limit_size_chef | default('') | string | length > 0 %}
LIMIT_SIZE_CHEF = {{ gitea_packages.limit_size_chef }}
  {% endif %}
  {% if gitea_packages.limit_size_composer | default('') | string | length > 0 %}
LIMIT_SIZE_COMPOSER = {{ gitea_packages.limit_size_composer }}
  {% endif %}
  {% if gitea_packages.limit_size_conan | default('') | string | length > 0 %}
LIMIT_SIZE_CONAN = {{ gitea_packages.limit_size_conan }}
  {% endif %}
  {% if gitea_packages.limit_size_conda | default('') | string | length > 0 %}
LIMIT_SIZE_CONDA = {{ gitea_packages.limit_size_conda }}
  {% endif %}
  {% if gitea_packages.limit_size_container | default('') | string | length > 0 %}
LIMIT_SIZE_CONTAINER = {{ gitea_packages.limit_size_container }}
  {% endif %}
  {% if gitea_packages.limit_size_generic | default('') | string | length > 0 %}
LIMIT_SIZE_GENERIC = {{ gitea_packages.limit_size_generic }}
  {% endif %}
  {% if gitea_packages.limit_size_helm | default('') | string | length > 0 %}
LIMIT_SIZE_HELM = {{ gitea_packages.limit_size_helm }}
  {% endif %}
  {% if gitea_packages.limit_size_maven | default('') | string | length > 0 %}
LIMIT_SIZE_MAVEN = {{ gitea_packages.limit_size_maven }}
  {% endif %}
  {% if gitea_packages.limit_size_npm | default('') | string | length > 0 %}
LIMIT_SIZE_NPM = {{ gitea_packages.limit_size_npm }}
  {% endif %}
  {% if gitea_packages.limit_size_nuget | default('') | string | length > 0 %}
LIMIT_SIZE_NUGET = {{ gitea_packages.limit_size_nuget }}
  {% endif %}
  {% if gitea_packages.limit_size_pub | default('') | string | length > 0 %}
LIMIT_SIZE_PUB = {{ gitea_packages.limit_size_pub }}
  {% endif %}
  {% if gitea_packages.limit_size_pypi | default('') | string | length > 0 %}
LIMIT_SIZE_PYPI = {{ gitea_packages.limit_size_pypi }}
  {% endif %}
  {% if gitea_packages.limit_size_rubygems | default('') | string | length > 0 %}
LIMIT_SIZE_RUBYGEMS = {{ gitea_packages.limit_size_rubygems }}
  {% endif %}
  {% if gitea_packages.limit_size_swift | default('') | string | length > 0 %}
LIMIT_SIZE_SWIFT = {{ gitea_packages.limit_size_swift }}
  {% endif %}
  {% if gitea_packages.limit_size_vagrant | default('') | string | length > 0 %}
LIMIT_SIZE_VAGRANT = {{ gitea_packages.limit_size_vagrant }}
  {% endif %}
{% endif %}

{% if gitea_picture is defined and
      gitea_picture | count > 0 %}
[picture]
  {% if gitea_picture.avatar_upload_path | default('') | string | length > 0 %}
AVATAR_UPLOAD_PATH = {{ gitea_picture.avatar_upload_path }}
  {% endif %}
  {% if gitea_picture.repository_avatar_upload_path | default('') | string | length > 0 %}
REPOSITORY_AVATAR_UPLOAD_PATH = {{ gitea_picture.repository_avatar_upload_path }}
  {% endif %}
  {% if gitea_picture.repository_avatar_fallback | default('') | string | length > 0 and
        gitea_picture.repository_avatar_fallback in ["none", "random", "image"]    %}
REPOSITORY_AVATAR_FALLBACK = {{ gitea_picture.repository_avatar_fallback }}
  {% endif %}
  {% if gitea_picture.repository_avatar_fallback_image | default('') | string | length > 0 %}
REPOSITORY_AVATAR_FALLBACK_IMAGE = {{ gitea_picture.repository_avatar_fallback_image }}
  {% endif %}
  {% if gitea_picture.avatar_max_width | default('') | string | length > 0 %}
AVATAR_MAX_WIDTH = {{ gitea_picture.avatar_max_width }}
  {% endif %}
  {% if gitea_picture.avatar_max_height | default('') | string | length > 0 %}
AVATAR_MAX_HEIGHT = {{ gitea_picture.avatar_max_height }}
  {% endif %}
  {% if gitea_picture.avatar_rendered_size_factor | default('') | string | length > 0 %}
AVATAR_RENDERED_SIZE_FACTOR = {{ gitea_picture.avatar_rendered_size_factor }}
  {% endif %}
  {% if gitea_picture.avatar_max_file_size | default('') | string | length > 0 %}
AVATAR_MAX_FILE_SIZE = {{ gitea_picture.avatar_max_file_size }}
  {% endif %}
  {% if gitea_picture.gravatar_source | default('') | string | length > 0 %}
GRAVATAR_SOURCE = {{ gitea_picture.gravatar_source }}
  {% endif %}
  {% if gitea_picture.disable_gravatar | default('') | string | length > 0 %}
DISABLE_GRAVATAR = {{ gitea_picture.disable_gravatar | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_picture.enable_federated_avatar | default('') | string | length > 0 %}
ENABLE_FEDERATED_AVATAR = {{ gitea_picture.enable_federated_avatar | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
{% endif %}

{% if gitea_project is defined and
      gitea_project | count > 0 %}
[project]
  {% if gitea_project.project_board_basic_kanban_type | count > 0 %}
PROJECT_BOARD_BASIC_KANBAN_TYPE = {{ gitea_project.project_board_basic_kanban_type | join(', ') }}
  {% endif %}
  {% if gitea_project.project_board_bug_triage_type | count > 0 %}
PROJECT_BOARD_BUG_TRIAGE_TYPE = {{ gitea_project.project_board_bug_triage_type | join(', ') }}
  {% endif %}
{% endif %}

{% if gitea_proxy is defined and
      gitea_proxy | count > 0 and
      gitea_proxy.proxy_enabled | bool %}
[proxy]
PROXY_ENABLED = {{ gitea_proxy.proxy_enabled | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% if gitea_proxy.proxy_url | default('') | string | length > 0 %}
PROXY_URL = {{ gitea_proxy.proxy_url }}
  {% endif %}
  {% if gitea_proxy.proxy_hosts | count > 0 %}
PROXY_HOSTS = {{ gitea_proxy.proxy_hosts | join(', ') }}
  {% endif %}
{% endif %}

{% if gitea_queue is defined and
      gitea_queue | count > 0 %}
[queue]
  {% set queue_parameters = [
    "type", "datadir", "length", "batch_length", "conn_str", "queue_name", "set_name",
    "wrap_if_necessary", "max_attempts", "timeout", "workers", "max_workers",
    "block_timeout", "boost_timeout", "boost_workers"] %}
  {% set default_queue = gitea_queue.default %}
  {% set gitea_queue = gitea_queue.pop('default') %}
  {% for k, v in default_queue.items() %}
    {% if k in queue_parameters and v | default('') | string | length > 0 %}
{{ k | upper }} = {{ v | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
  {% endfor %}
  {#
    TODO
      Specific queues can be individually configured with [queue.name]. [queue] provides defaults
      ([queue.issue_indexer] is special due to the old configuration described above)
  #}
{% endif %}

{% if gitea_repository is defined and
      gitea_repository | count > 0 %}
[repository]
  {% if gitea_repository.root | default('') | string | length > 0 %}
ROOT = {{ gitea_repository.root }}
  {% endif %}
  {% if gitea_repository.root | default('') | string | length > 0 %}
SCRIPT_TYPE = bash
  {% endif %}
  {% if gitea_repository.detected_charsets_order | count > 0 %}
DETECTED_CHARSETS_ORDER = {{ gitea_repository.detected_charsets_order | join(', ') }}
  {% endif %}
  {% if gitea_repository.ansi_charset | default('') | string | length > 0 %}
ANSI_CHARSET = {{ gitea_repository.ansi_charset }}
  {% endif %}
  {% if gitea_repository.force_private | default('') | string | length > 0 %}
FORCE_PRIVATE = {{ gitea_repository.force_private | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.default_private | default('') | string | length > 0 and
        gitea_repository.default_private in ["last", "private", "public"] %}
DEFAULT_PRIVATE = {{ gitea_repository.default_private }}
  {% endif %}
  {% if gitea_repository.default_push_create_private | default('') | string | length > 0 %}
DEFAULT_PUSH_CREATE_PRIVATE = {{ gitea_repository.default_push_create_private | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.max_creation_limit | default('') | string | length > 0 %}
MAX_CREATION_LIMIT = {{ gitea_repository.max_creation_limit }}
  {% endif %}
  {% if gitea_repository.mirror_queue_length | default('') | string | length > 0 %}
;; (DEPRECATED: please use [queue.mirror] LENGTH instead)
MIRROR_QUEUE_LENGTH = {{ gitea_repository.mirror_queue_length }}
  {% endif %}
  {% if gitea_repository.pull_request_queue_length | default('') | string | length > 0 %}
;; (DEPRECATED: please use [queue.pr_patch_checker] LENGTH instead)
PULL_REQUEST_QUEUE_LENGTH = {{ gitea_repository.pull_request_queue_length }}
  {% endif %}
  {% if gitea_repository.preferred_licenses | count > 0 %}
PREFERRED_LICENSES = {{ gitea_repository.preferred_licenses | join (', ') }}
  {% endif %}
  {% if gitea_repository.disable_http_git | default('') | string | length > 0 %}
DISABLE_HTTP_GIT = {{ gitea_repository.disable_http_git | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.access_control_allow_origin | default('') | string | length > 0 %}
ACCESS_CONTROL_ALLOW_ORIGIN = {{ gitea_repository.access_control_allow_origin }}
  {% endif %}
  {% if gitea_repository.use_compat_ssh_uri | default('') | string | length > 0 %}
USE_COMPAT_SSH_URI = {{ gitea_repository.use_compat_ssh_uri | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.disabled_repo_units | count > 0 %}
  {#
      TODO
      allowed values: repo.issues, repo.ext_issues, repo.pulls, repo.wiki, repo.ext_wiki, repo.projects, repo.packages, repo.actions.
  #}
DISABLED_REPO_UNITS = {{ gitea_repository.disabled_repo_units | join(', ') }}
  {% endif %}
  {% if gitea_repository.default_repo_units | count > 0 %}
  {#
      TODO
      allowed values: repo.code, repo.releases, repo.issues, repo.pulls, repo.wiki, repo.projects, repo.packages, repo.actions.
  #}
DEFAULT_REPO_UNITS = {{ gitea_repository.default_repo_units | join(', ') }}
  {% endif %}
  {% if gitea_repository.default_fork_repo_units | count > 0 %}
  {#
      TODO
      the set of allowed values and rules are the same as default_REPO_UNITS.
  #}
  ;; Comma separated list of default forked repo units.
DEFAULT_FORK_REPO_UNITS = {{ gitea_repository.default_fork_repo_units | join(', ') }}
  {% endif %}
  {% if gitea_repository.prefix_archive_files | default('') | string | length > 0 %}
PREFIX_ARCHIVE_FILES = {{ gitea_repository.prefix_archive_files | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.disable_migrations | default('') | string | length > 0 %}
DISABLE_MIGRATIONS = {{ gitea_repository.disable_migrations | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.disable_stars | default('') | string | length > 0 %}
DISABLE_STARS = {{ gitea_repository.disable_stars | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.default_branch | default('') | string | length > 0 %}
DEFAULT_BRANCH = {{ gitea_repository.default_branch }}
  {% endif %}
  {% if gitea_repository.allow_adoption_of_unadopted_repositories | default('') | string | length > 0 %}
ALLOW_ADOPTION_OF_UNADOPTED_REPOSITORIES = {{ gitea_repository.allow_adoption_of_unadopted_repositories | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.allow_deletion_of_unadopted_repositories | default('') | string | length > 0 %}
ALLOW_DELETION_OF_UNADOPTED_REPOSITORIES = {{ gitea_repository.allow_deletion_of_unadopted_repositories | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.disable_download_source_archives | default('') | string | length > 0 %}
DISABLE_DOWNLOAD_SOURCE_ARCHIVES = {{ gitea_repository.disable_download_source_archives | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_repository.allow_fork_without_maximum_limit | default('') | string | length > 0 %}
ALLOW_FORK_WITHOUT_MAXIMUM_LIMIT = {{ gitea_repository.allow_fork_without_maximum_limit | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {# [repository.editor] #}
  {% if gitea_repository.editor is defined and
        gitea_repository.editor | count > 0 %}

[repository.editor]
    {% if gitea_repository.editor.line_wrap_extensions | count > 0 %}
LINE_WRAP_EXTENSIONS = {{ gitea_repository.editor.line_wrap_extensions | join(', ') }}
    {% endif %}
  {% endif %}
  {# [repository.local] #}
  {% if gitea_repository.local is defined and
        gitea_repository.local | count > 0 %}

[repository.local]
    {% if gitea_repository.local.local_copy_path | default('') | string | length > 0 %}
LOCAL_COPY_PATH = {{ gitea_repository.local.local_copy_path }}
    {% endif %}
  {% endif %}
  {# [repository.upload] #}
  {% if gitea_repository.upload is defined and
        gitea_repository.upload | count > 0 and
        gitea_repository.upload.enabled | bool  %}

[repository.upload]
ENABLED = {{ gitea_repository.upload.enabled | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% if gitea_repository.upload.temp_path | default('') | string | length > 0 %}
TEMP_PATH = {{ gitea_repository.upload.temp_path }}
    {% endif %}
    {% if gitea_repository.upload.allowed_types | count > 0 %}
ALLOWED_TYPES = {{ gitea_repository.upload.allowed_types | joint(', ') }}
    {% endif %}
    {% if gitea_repository.upload.file_max_size | default('') | string | length > 0 %}
FILE_MAX_SIZE = {{ gitea_repository.upload.file_max_size }}
    {% endif %}
    {% if gitea_repository.upload.max_files | default('') | string | length > 0 %}
MAX_FILES = {{ gitea_repository.upload.max_files }}
    {% endif %}
  {% endif %}
  {# [repository.pull-request] #}
  {% if gitea_repository.pull_request is defined and
        gitea_repository.pull_request | count > 0 %}

[repository.pull-request]
    {% if gitea_repository.pull_request.work_in_progress_prefixes | count > 0 %}
WORK_IN_PROGRESS_PREFIXES = {{ gitea_repository.pull_request.work_in_progress_prefixes | join(', ') }}
    {% endif %}
    {% if gitea_repository.pull_request.close_keywords | count > 0 %}
CLOSE_KEYWORDS = {{ gitea_repository.pull_request.close_keywords | join(', ') }}
    {% endif %}
    {% if gitea_repository.pull_request.reopen_keywords | count > 0 %}
REOPEN_KEYWORDS = {{ gitea_repository.pull_request.reopen_keywords | join(', ') }}
    {% endif %}
    {% if gitea_repository.pull_request.default_merge_style | default('') | string | length > 0 and
          gitea_repository.pull_request.default_merge_style in ["merge", "rebase", "rebase-merge", "squash"] %}
DEFAULT_MERGE_STYLE = {{ gitea_repository.pull_request.default_merge_style }}
    {% endif %}
    {% if gitea_repository.pull_request.default_merge_message_commits_limit | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_COMMITS_LIMIT = {{ gitea_repository.pull_request.default_merge_message_commits_limit }}
    {% endif %}
    {% if gitea_repository.pull_request.default_merge_message_size | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_SIZE = {{ gitea_repository.pull_request.default_merge_message_size }}
    {% endif %}
    {% if gitea_repository.pull_request.default_merge_message_all_authors | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_ALL_AUTHORS = {{ gitea_repository.pull_request.default_merge_message_all_authors | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_repository.pull_request.default_merge_message_max_approvers | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_MAX_APPROVERS = {{ gitea_repository.pull_request.default_merge_message_max_approvers }}
    {% endif %}
    {% if gitea_repository.pull_request.default_merge_message_official_approvers_only | default('') | string | length > 0 %}
DEFAULT_MERGE_MESSAGE_OFFICIAL_APPROVERS_ONLY = {{ gitea_repository.pull_request.default_merge_message_official_approvers_only | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_repository.pull_request.add_co_committer_trailers | default('') | string | length > 0 %}
ADD_CO_COMMITTER_TRAILERS = {{ gitea_repository.pull_request.add_co_committer_trailers | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_repository.pull_request.test_conflicting_patches_with_git_apply | default('') | string | length > 0 %}
TEST_CONFLICTING_PATCHES_WITH_GIT_APPLY = {{ gitea_repository.pull_request.test_conflicting_patches_with_git_apply | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
  {% endif %}
  {# [repository.issue] #}
  {% if gitea_repository.issue is defined and
        gitea_repository.issue | count > 0 %}

[repository.issue]
    {% if gitea_repository.issue.lock_reasons | count > 0 %}
LOCK_REASONS = {{ gitea_repository.issue.lock_reasons | join(', ') }}
    {% endif %}
  {% endif %}
  {# [repository.release] #}
  {% if gitea_repository.release is defined and
        gitea_repository.release | count > 0 %}

[repository.release]
    {% if gitea_repository.release.allowed_types | count > 0 %}
ALLOWED_TYPES = {{ gitea_repository.release.allowed_types | join(', ') }}
    {% endif %}
    {% if gitea_repository.release.default_paging_num | default('') | string | length > 0 %}
DEFAULT_PAGING_NUM = {{ gitea_repository.release.default_paging_num }}
    {% endif %}
  {% endif %}
  {# [repository.signing] #}
  {% if gitea_repository.signing is defined and
        gitea_repository.signing | count > 0 %}

[repository.signing]
    {% if gitea_repository.signing.signing_key | default('') | string | length > 0 %}
SIGNING_KEY = {{ gitea_repository.signing.signing_key }}
    {% else %}
      {% if gitea_repository.signing.signing_name | default('') | string | length > 0 %}
SIGNING_NAME = {{ gitea_repository.signing.signing_name }}
      {% endif %}
      {% if gitea_repository.signing.signing_email | default('') | string | length > 0 %}
SIGNING_EMAIL = {{ gitea_repository.signing.signing_email }}
      {% endif %}
    {% endif %}
    {% if gitea_repository.signing.default_trust_model | default('') | string | length > 0 and
          gitea_repository.signing.default_trust_model in ["collaborator", "committer", "collaboratorcommitter"] %}
DEFAULT_TRUST_MODEL = {{ gitea_repository.signing.default_trust_model }}
    {% endif %}
    {% if gitea_repository.signing.initial_commit | count > 0 %}
      {% set valid_comit = ["never", "pubkey", "twofa", "always"] %}
      {% set valid_comit = gitea_repository.signing.initial_commit | bodsch.core.compare_list(compare_to_list=valid_comit) %}
INITIAL_COMMIT = {{ valid_comit | join(', ') }}
    {% endif %}
    {% if gitea_repository.signing.crud_actions | default('') | string | length > 0 %}
      {% set valid_actions = ["never", "pubkey", "twofa", "always", "parentsigned"] %}
      {% set valid_actions = gitea_repository.signing.crud_actions | bodsch.core.compare_list(compare_to_list=valid_actions) %}
CRUD_ACTIONS = {{ valid_actions | join(', ') }}
    {% endif %}
    {% if gitea_repository.signing.wiki | count > 0 %}
      {% set valid_wiki = ["never", "pubkey", "twofa", "always"] %}
      {% set valid_wiki = gitea_repository.signing.wiki | bodsch.core.compare_list(compare_to_list=valid_wiki) %}
WIKI = {{ valid_wiki | join(', ') }}
    {% endif %}
    {% if gitea_repository.signing.merges | count > 0 %}
      {% set valid_merges = ["never", "pubkey", "twofa", "always", "basesigned", "commitssigned", "approved"] %}
      {% set valid_merges = gitea_repository.signing.merges | bodsch.core.compare_list(compare_to_list=valid_merges) %}
MERGES = {{ valid_merges | join(', ') }}
    {% endif %}
  {% endif %}
  {# [repository.mimetype_mapping] #}
  {% if gitea_repository.mimetype_mapping is defined and
        gitea_repository.mimetype_mapping | count > 0 %}

[repository.mimetype_mapping]
    {% for k, v in gitea_repository.mimetype_mapping.items() %}
{{ k }} = {{ v }}
    {% endfor %}
  {% endif %}
{% endif %}

{% if gitea_security is defined and
      gitea_security | count > 0 %}
[security]
  {% if gitea_security.install_lock | default('') | string | length > 0 %}
INSTALL_LOCK = {{ gitea_security.install_lock | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_security.secret_key | default('') | string | length > 0 %}
SECRET_KEY = {{ gitea_security.secret_key }}
  {% endif %}
  {% if gitea_security.secret_key_uri | default('') | string | length > 0 %}
SECRET_KEY_URI = {{ gitea_security.secret_key_uri }}
  {% endif %}
  {% if gitea_security.internal_token | default('') | string | length > 0 %}
INTERNAL_TOKEN = {{ gitea_security.internal_token }}
  {% endif %}
  {% if gitea_security.internal_token_uri | default('') | string | length > 0 %}
INTERNAL_TOKEN_URI = {{ gitea_security.internal_token_uri }}
  {% endif %}
  {% if gitea_security.login_remember_days | default('') | string | length > 0 %}
LOGIN_REMEMBER_DAYS = {{ gitea_security.login_remember_days }}
  {% endif %}
  {% if gitea_security.cookie_username | default('') | string | length > 0 %}
COOKIE_USERNAME = {{ gitea_security.cookie_username }}
  {% endif %}
  {% if gitea_security.cookie_remember_name | default('') | string | length > 0 %}
COOKIE_REMEMBER_NAME = {{ gitea_security.cookie_remember_name }}
  {% endif %}
  {% if gitea_security.reverse_proxy is defined and
        gitea_security.reverse_proxy | count > 0 %}
    {% if gitea_security.reverse_proxy.authentication.user | default('') | string | length > 0 %}
REVERSE_PROXY_AUTHENTICATION_USER = {{ gitea_security.reverse_proxy.authentication.user }}
    {% endif %}
    {% if gitea_security.reverse_proxy.authentication.email | default('') | string | length > 0 %}
REVERSE_PROXY_AUTHENTICATION_EMAIL = {{ gitea_security.reverse_proxy.authentication.email }}
    {% endif %}
    {% if gitea_security.reverse_proxy.authentication.full_name | default('') | string | length > 0 %}
REVERSE_PROXY_AUTHENTICATION_FULL_NAME = {{ gitea_security.reverse_proxy.authentication.full_name }}
    {% endif %}
    {% if gitea_security.reverse_proxy.limit | default('') | string | length > 0 %}
REVERSE_PROXY_LIMIT = {{ gitea_security.reverse_proxy.limit }}
    {% endif %}
    {% if gitea_security.reverse_proxy.trusted_proxies | count > 0 %}
REVERSE_PROXY_TRUSTED_PROXIES = {{ gitea_security.reverse_proxy.trusted_proxies | join(', ') }}
     {% endif %}
  {% endif %}
  {% if gitea_security.min_password_length | default('') | string | length > 0 %}
MIN_PASSWORD_LENGTH = {{ gitea_security.min_password_length }}
  {% endif %}
  {% if gitea_security.import_local_paths | default('') | string | length > 0 %}
IMPORT_LOCAL_PATHS = {{ gitea_security.import_local_paths | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_security.disable_git_hooks | default('') | string | length > 0 %}
DISABLE_GIT_HOOKS = {{ gitea_security.disable_git_hooks | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_security.disable_webhooks | default('') | string | length > 0 %}
DISABLE_WEBHOOKS = {{ gitea_security.disable_webhooks | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_security.only_allow_push_if_gitea_environment_set | default('') | string | length > 0 %}
ONLY_ALLOW_PUSH_IF_GITEA_ENVIRONMENT_SET = {{ gitea_security.only_allow_push_if_gitea_environment_set | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_security.password_complexity | count > 0 %}
    {% set valid_complexity = ["lower", "upper", "digit", "spec"] %}
    {% set valid_complexity = gitea_security.password_complexity | bodsch.core.compare_list(compare_to_list=valid_complexity) %}
    {% if valid_complexity %}
PASSWORD_COMPLEXITY = {{ valid_complexity | join(', ') }}
    {% else %}
PASSWORD_COMPLEXITY = off
    {% endif %}
  {% endif %}
  {% if gitea_security.password_hash_algo | default('') | string | length > 0 and
        gitea_security.password_hash_algo in ["argon2", "pbkdf2", "scrypt", "bcrypt"] %}
PASSWORD_HASH_ALGO = {{ gitea_security.password_hash_algo }}
  {% endif %}
  {% if gitea_security.csrf_cookie_http_only | default('') | string | length > 0 %}
CSRF_COOKIE_HTTP_ONLY = {{ gitea_security.csrf_cookie_http_only | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_security.password_check_pwn | default('') | string | length > 0 %}
PASSWORD_CHECK_PWN = {{ gitea_security.password_check_pwn | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_security.successful_tokens_cache_size | default('') | string | length > 0 %}
SUCCESSFUL_TOKENS_CACHE_SIZE = {{ gitea_security.successful_tokens_cache_size }}
  {% endif %}
{% endif %}

{% if gitea_server is defined and
      gitea_server | count > 0 %}
[server]
  {% if gitea_server.protocol | default('') | string | length > 0 and
        gitea_server.protocol in  ["http", "https", "http+unix", "fcgi", "fcgi+unix"] %}
PROTOCOL = {{ gitea_server.protocol }}
  {% endif %}
  {% if gitea_server.use_proxy_protocol | default('') | string | length > 0 %}
USE_PROXY_PROTOCOL = {{ gitea_server.use_proxy_protocol | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.proxy_protocol_tls_bridging | default('') | string | length > 0 %}
PROXY_PROTOCOL_TLS_BRIDGING = {{ gitea_server.proxy_protocol_tls_bridging | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.proxy_protocol_header_timeout | default('') | string | length > 0 %}
PROXY_PROTOCOL_HEADER_TIMEOUT = {{ gitea_server.proxy_protocol_header_timeout }}
  {% endif %}
  {% if gitea_server.proxy_protocol_accept_unknown | default('') | string | length > 0 %}
PROXY_PROTOCOL_ACCEPT_UNKNOWN = {{ gitea_server.proxy_protocol_accept_unknown | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.domain | default('') | string | length > 0 %}
DOMAIN = {{ gitea_server.domain }}
  {% endif %}
  {% if gitea_server.root_url | default('') | string | length > 0 %}
ROOT_URL = {{ gitea_server.root_url }}
  {% endif %}
  {% if gitea_server.static_url_prefix | default('') | string | length > 0 %}
STATIC_URL_PREFIX = {{ gitea_server.static_url_prefix }}
  {% endif %}
  {% if gitea_server.http_addr | default('') | string | length > 0 %}
HTTP_ADDR = {{ gitea_server.http_addr }}
  {% endif %}
  {% if gitea_server.http_port | default('') | string | length > 0 %}
HTTP_PORT = {{ gitea_server.http_port }}
  {% endif %}
  {% if gitea_server.redirect_other_port | default('') | string | length > 0 %}
REDIRECT_OTHER_PORT = {{ gitea_server.redirect_other_port | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% if gitea_server.port_to_redirect | default('') | string | length > 0 %}
PORT_TO_REDIRECT = 80
    {% endif %}
  {% endif %}
  {% if gitea_server.redirector_use_proxy_protocol | default('') | string | length > 0 %}
REDIRECTOR_USE_PROXY_PROTOCOL = {{ gitea_server.redirector_use_proxy_protocol }}
  {% endif %}
  {% if gitea_server.ssl_min_version | default('') | string | length > 0 %}
SSL_MIN_VERSION = {{ gitea_server.ssl_min_version }}
  {% endif %}
  {% if gitea_server.ssl_max_version | default('') | string | length > 0 %}
SSL_MAX_VERSION = {{ gitea_server.ssl_max_version }}
  {% endif %}
  {% if gitea_server.ssl_curve_preferences | count > 0 %}
SSL_CURVE_PREFERENCES = {{ gitea_server.ssl_curve_preferences | join(', ') }}
  {% endif %}
  {% if gitea_server.ssl_cipher_suites | count > 0 %}
SSL_CIPHER_SUITES =  {{ gitea_server.ssl_cipher_suites | join(', ') }}
  {% endif %}
  {% if gitea_server.per_write_timeout | default('') | string | length > 0 %}
PER_WRITE_TIMEOUT = {{ gitea_server.per_write_timeout }}
  {% endif %}
  {% if gitea_server.per_write_per_kb_timeout | default('') | string | length > 0 %}
PER_WRITE_PER_KB_TIMEOUT = {{ gitea_server.per_write_per_kb_timeout }}
  {% endif %}
  {% if gitea_server.unix_socket_permission | default('') | string | length > 0 %}
UNIX_SOCKET_PERMISSION = {{ gitea_server.unix_socket_permission }}
  {% endif %}
  {% if gitea_server.local_root_url | default('') | string | length > 0 %}
LOCAL_ROOT_URL = {{ gitea_server.local_root_url }}
  {% endif %}
  {% if gitea_server.local_use_proxy_protocol | default('') | string | length > 0 %}
LOCAL_USE_PROXY_PROTOCOL = {{ gitea_server.local_use_proxy_protocol }}
  {% endif %}
  {% if gitea_server.disable_ssh | default('') | string | length > 0 %}
DISABLE_SSH = {{ gitea_server.disable_ssh | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.start_ssh_server | default('') | string | length > 0 %}
START_SSH_SERVER = {{ gitea_server.start_ssh_server | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.ssh_server_use_proxy_protocol | default('') | string | length > 0 %}
SSH_SERVER_USE_PROXY_PROTOCOL = {{ gitea_server.ssh_server_use_proxy_protocol | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.builtin_ssh_server_user | default('') | string | length > 0 %}
BUILTIN_SSH_SERVER_USER = {{ gitea_server.builtin_ssh_server_user }}
  {% endif %}
  {% if gitea_server.ssh_domain | default('') | string | length > 0 %}
SSH_DOMAIN = {{ gitea_server.ssh_domain }}
  {% endif %}
  {% if gitea_server.ssh_user | default('') | string | length > 0 %}
SSH_USER = {{ gitea_server.ssh_user }}
  {% endif %}
  {% if gitea_server.ssh_listen_host | default('') | string | length > 0 %}
SSH_LISTEN_HOST = {{ gitea_server.ssh_listen_host }}
  {% endif %}
  {% if gitea_server.ssh_port | default('') | string | length > 0 %}
SSH_PORT = {{ gitea_server.ssh_port }}
  {% endif %}
  {% if gitea_server.ssh_listen_port | default('') | string | length > 0 %}
SSH_LISTEN_PORT = {{ gitea_server.ssh_listen_port }}
  {% endif %}
  {% if gitea_server.ssh_root_path | default('') | string | length > 0 %}
SSH_ROOT_PATH = {{ gitea_server.ssh_root_path }}
  {% endif %}
  {% if gitea_server.ssh_create_authorized_keys_file | default('') | string | length > 0 %}
SSH_CREATE_AUTHORIZED_KEYS_FILE = {{ gitea_server.ssh_create_authorized_keys_file | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.ssh_create_authorized_principals_file | default('') | string | length > 0 %}
SSH_CREATE_AUTHORIZED_PRINCIPALS_FILE = {{ gitea_server.ssh_create_authorized_principals_file | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.ssh_server_ciphers | count > 0 %}
SSH_SERVER_CIPHERS = {{ gitea_server.ssh_server_ciphers | join(', ') }}
  {% endif %}
  {% if gitea_server.ssh_server_key_exchanges | count > 0 %}
SSH_SERVER_KEY_EXCHANGES = {{ gitea_server.ssh_server_key_exchanges | join(', ') }}
  {% endif %}
  {% if gitea_server.ssh_server_macs | count > 0 %}
SSH_SERVER_MACS = {{ gitea_server.ssh_server_macs | join(', ') }}
  {% endif %}
  {% if gitea_server.ssh_server_host_keys | count > 0 %}
SSH_SERVER_HOST_KEYS = {{ gitea_server.ssh_server_host_keys | join(', ') }}
  {% endif %}
  {% if gitea_server.ssh_key_test_path | default('') | string | length > 0 %}
SSH_KEY_TEST_PATH = {{ gitea_server.ssh_key_test_path }}
  {% endif %}
  {% if gitea_server.ssh_keygen_path | default('') | string | length > 0 %}
SSH_KEYGEN_PATH = {{ gitea_server.ssh_keygen_path }}
  {% endif %}
  {% if gitea_server.ssh_authorized_keys_backup | default('') | string | length > 0 %}
SSH_AUTHORIZED_KEYS_BACKUP = {{ gitea_server.ssh_authorized_keys_backup | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.ssh_authorized_principals_allow | default('') | string | length > 0 %}
    {% if gitea_server.ssh_trusted_user_ca_keys is defined and
          gitea_server.ssh_trusted_user_ca_keys | string | length == 0 %}
      {% set valid_principals = ["off"] %}
    {% else %}
      {% set valid_principals = ["empty", "off", "email", "username", "anything"] %}
      {% set valid_principals = gitea_server.ssh_authorized_principals_allow | bodsch.core.compare_list(compare_to_list=valid_principals) %}
    {% endif %}
SSH_AUTHORIZED_PRINCIPALS_ALLOW = {{ valid_principals | join(', ') }}
  {% endif %}
  {% if gitea_server.ssh_authorized_principals_backup | default('') | string | length > 0 %}
SSH_AUTHORIZED_PRINCIPALS_BACKUP = {{ gitea_server.ssh_authorized_principals_backup | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.ssh_trusted_user_ca_keys | count > 0 %}
SSH_TRUSTED_USER_CA_KEYS = {{ gitea_server.ssh_trusted_user_ca_keys | join(', ') }}
  {% endif %}
  {% if gitea_server.ssh_trusted_user_ca_keys_filename | default('') | string | length > 0 %}
SSH_TRUSTED_USER_CA_KEYS_FILENAME = {{ gitea_server.ssh_trusted_user_ca_keys_filename }}
  {% endif %}
  {% if gitea_server.ssh_expose_anonymous | default('') | string | length > 0 %}
SSH_EXPOSE_ANONYMOUS = {{ gitea_server.ssh_expose_anonymous | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.ssh_per_write_timeout | default('') | string | length > 0 %}
SSH_PER_WRITE_TIMEOUT = {{ gitea_server.ssh_per_write_timeout }}
  {% endif %}
  {% if gitea_server.ssh_per_write_per_kb_timeout | default('') | string | length > 0 %}
SSH_PER_WRITE_PER_KB_TIMEOUT = {{ gitea_server.ssh_per_write_per_kb_timeout }}
  {% endif %}
  {% if gitea_server.minimum_key_size_check | default('') | string | length > 0 %}
MINIMUM_KEY_SIZE_CHECK = {{ gitea_server.minimum_key_size_check | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.offline_mode | default('') | string | length > 0 %}
OFFLINE_MODE = {{ gitea_server.offline_mode | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.disable_router_log | default('') | string | length > 0 %}
DISABLE_ROUTER_LOG = {{ gitea_server.disable_router_log | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.enable_acme | default('') | string | length > 0 %}
ENABLE_ACME = {{ gitea_server.enable_acme | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% if gitea_server.acme_url | default('') | string | length > 0 %}
ACME_URL = {{ gitea_server.acme_url }}
    {% endif %}
    {% if gitea_server.acme_accepttos | default('') | string | length > 0 %}
ACME_ACCEPTTOS = {{ gitea_server.acme_accepttos | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_server.acme_ca_root | default('') | string | length > 0 %}
ACME_CA_ROOT = {{ gitea_server.acme_ca_root }}
    {% endif %}
    {% if gitea_server.acme_email | default('') | string | length > 0 %}
ACME_EMAIL = {{ gitea_server.acme_email }}
    {% endif %}
    {% if gitea_server.acme_directory | default('') | string | length > 0 %}
ACME_DIRECTORY = {{ gitea_server.acme_directory }}
    {% endif %}
  {% endif %}
  {% if gitea_server.cert_file | default('') | string | length > 0 %}
CERT_FILE = {{ gitea_server.cert_file }}
  {% endif %}
  {% if gitea_server.key_file | default('') | string | length > 0 %}
KEY_FILE = {{ gitea_server.key_file }}
  {% endif %}
  {% if gitea_server.static_root_path | default('') | string | length > 0 %}
STATIC_ROOT_PATH = {{ gitea_server.static_root_path }}
  {% endif %}
  {% if gitea_server.app_data_path | default('') | string | length > 0 %}
APP_DATA_PATH = {{ gitea_server.app_data_path }}
  {% endif %}
  {% if gitea_server.enable_gzip | default('') | string | length > 0 %}
ENABLE_GZIP = {{ gitea_server.enable_gzip | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.enable_pprof | default('') | string | length > 0 %}
ENABLE_PPROF = {{ gitea_server.enable_pprof | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.pprof_data_path | default('') | string | length > 0 %}
PPROF_DATA_PATH = {{ gitea_server.pprof_data_path }}
  {% endif %}
  {% if gitea_server.landing_page | default('') | string | length > 0 and
        gitea_server.landing_page in ["home", "explore", "organizations", "login"] %}
    {#
        Landing page, can be "home", "explore", "organizations", "login", or any URL such as "/org/repo" or even "https://anotherwebsite.com"
        The "login" choice is not a security measure but just a UI flow change, use REQUIRE_SIGNIN_VIEW to force users to log in.
    #}
LANDING_PAGE = {{ gitea_server.landing_page }}
  {% endif %}
  {% if gitea_server.lfs_start_server | default('') | string | length > 0 %}
LFS_START_SERVER = {{ gitea_server.lfs_start_server | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.lfs_jwt_secret | default('') | string | length > 0 %}
LFS_JWT_SECRET = {{ gitea_server.lfs_jwt_secret }}
  {% endif %}
  {% if gitea_server.lfs_http_auth_expiry | default('') | string | length > 0 %}
LFS_HTTP_AUTH_EXPIRY = {{ gitea_server.lfs_http_auth_expiry }}
  {% endif %}
  {% if gitea_server.lfs_max_file_size | default('') | string | length > 0 %}
LFS_MAX_FILE_SIZE = {{ gitea_server.lfs_max_file_size }}
  {% endif %}
  {% if gitea_server.lfs_locks_paging_num | default('') | string | length > 0 %}
LFS_LOCKS_PAGING_NUM = {{ gitea_server.lfs_locks_paging_num }}
  {% endif %}
  {% if gitea_server.allow_graceful_restarts | default('') | string | length > 0 %}
ALLOW_GRACEFUL_RESTARTS = {{ gitea_server.allow_graceful_restarts | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_server.graceful_hammer_time | default('') | string | length > 0 %}
GRACEFUL_HAMMER_TIME = {{ gitea_server.graceful_hammer_time }}
  {% endif %}
  {% if gitea_server.startup_timeout | default('') | string | length > 0 %}
STARTUP_TIMEOUT = {{ gitea_server.startup_timeout }}
  {% endif %}
  {% if gitea_server.static_cache_time | default('') | string | length > 0 %}
STATIC_CACHE_TIME = {{ gitea_server.static_cache_time }}
  {% endif %}
{% endif %}

{% if gitea_service is defined and
      gitea_service | count > 0 %}
[service]
  {% if gitea_service.active_code_live_minutes | default('') | string | length > 0 %}
ACTIVE_CODE_LIVE_MINUTES = {{ gitea_service.active_code_live_minutes }}
  {% endif %}
  {% if gitea_service.reset_passwd_code_live_minutes | default('') | string | length > 0 %}
RESET_PASSWD_CODE_LIVE_MINUTES = {{ gitea_service.reset_passwd_code_live_minutes }}
  {% endif %}
  {% if gitea_service.register_email_confirm | default('') | string | length > 0 %}
REGISTER_EMAIL_CONFIRM = {{ gitea_service.register_email_confirm | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.register_manual_confirm | default('') | string | length > 0 %}
REGISTER_MANUAL_CONFIRM = {{ gitea_service.register_manual_confirm | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.email_domain_whitelist | count > 0 %}
EMAIL_DOMAIN_WHITELIST = {{ gitea_service.email_domain_whitelist | join(', ') }}
  {% endif %}
  {% if gitea_service.email_domain_blocklist | count > 0 %}
EMAIL_DOMAIN_BLOCKLIST = {{ gitea_service.email_domain_blocklist | join(', ') }}
  {% endif %}
  {% if gitea_service.disable_registration | default('') | string | length > 0 %}
DISABLE_REGISTRATION = {{ gitea_service.disable_registration | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.allow_only_internal_registration | default('') | string | length > 0 %}
ALLOW_ONLY_INTERNAL_REGISTRATION = {{ gitea_service.allow_only_internal_registration | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.allow_only_external_registration | default('') | string | length > 0 %}
ALLOW_ONLY_EXTERNAL_REGISTRATION = {{ gitea_service.allow_only_external_registration | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.require_signin_view | default('') | string | length > 0 %}
REQUIRE_SIGNIN_VIEW = {{ gitea_service.require_signin_view | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_notify_mail | default('') | string | length > 0 %}
ENABLE_NOTIFY_MAIL = {{ gitea_service.enable_notify_mail | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_basic_authentication | default('') | string | length > 0 %}
ENABLE_BASIC_AUTHENTICATION = {{ gitea_service.enable_basic_authentication | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_reverse_proxy_authentication | default('') | string | length > 0 %}
ENABLE_REVERSE_PROXY_AUTHENTICATION = {{ gitea_service.enable_reverse_proxy_authentication | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_reverse_proxy_auto_registration | default('') | string | length > 0 %}
ENABLE_REVERSE_PROXY_AUTO_REGISTRATION = {{ gitea_service.enable_reverse_proxy_auto_registration | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_reverse_proxy_email | default('') | string | length > 0 %}
ENABLE_REVERSE_PROXY_EMAIL = {{ gitea_service.enable_reverse_proxy_email | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_reverse_proxy_full_name | default('') | string | length > 0 %}
ENABLE_REVERSE_PROXY_FULL_NAME = {{ gitea_service.enable_reverse_proxy_full_name | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_captcha | default('') | string | length > 0 %}
ENABLE_CAPTCHA = {{ gitea_service.enable_captcha | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.require_captcha_for_login | default('') | string | length > 0 %}
REQUIRE_CAPTCHA_FOR_LOGIN = {{ gitea_service.require_captcha_for_login | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.captcha_type | default('') | string | length > 0 and
        gitea_service.captcha_type in ["image", "recaptcha", "hcaptcha", "mcaptcha", "cfturnstile"] %}
CAPTCHA_TYPE = {{ gitea_service.captcha_type }}
    {% if gitea_service.captcha_type == "recaptcha" %}
      {% if gitea_service.recaptcha_url | default('') | string | length > 0 %}
RECAPTCHA_URL = {{ gitea_service.recaptcha_url }}
      {% endif %}
      {% if gitea_service.recaptcha_secret | default('') | string | length > 0 %}
RECAPTCHA_SECRET = {{ gitea_service.recaptcha_secret }}
      {% endif %}
      {% if gitea_service.recaptcha_sitekey | default('') | string | length > 0 %}
RECAPTCHA_SITEKEY = {{ gitea_service.recaptcha_sitekey }}
      {% endif %}
    {% endif %}
    {% if gitea_service.captcha_type == "hcaptcha" %}
      {% if gitea_service.hcaptcha_secret | default('') | string | length > 0 %}
HCAPTCHA_SECRET = {{ gitea_service.hcaptcha_secret }}
      {% endif %}
      {% if gitea_service.hcaptcha_sitekey | default('') | string | length > 0 %}
HCAPTCHA_SITEKEY = {{ gitea_service.hcaptcha_sitekey }}
      {% endif %}
    {% endif %}
    {% if gitea_service.captcha_type == "mcaptcha" %}
      {% if gitea_service.mcaptcha_url | default('') | string | length > 0 %}
MCAPTCHA_URL = {{ gitea_service.mcaptcha_url }}
      {% endif %}
      {% if gitea_service.mcaptcha_secret | default('') | string | length > 0 %}
MCAPTCHA_SECRET = {{ gitea_service.mcaptcha_secret }}
      {% endif %}
      {% if gitea_service.mcaptcha_sitekey | default('') | string | length > 0 %}
MCAPTCHA_SITEKEY = {{ gitea_service.mcaptcha_sitekey }}
      {% endif %}
    {% endif %}
    {% if gitea_service.captcha_type == "cfturnstile" %}
      {% if gitea_service.cf_turnstile_sitekey | default('') | string | length > 0 %}
CF_TURNSTILE_SITEKEY = {{ gitea_service.cf_turnstile_sitekey }}
      {% endif %}
      {% if gitea_service.cf_turnstile_secret | default('') | string | length > 0 %}
CF_TURNSTILE_SECRET = {{ gitea_service.cf_turnstile_secret }}
      {% endif %}
    {% endif %}
  {% endif %}
  {% if gitea_service.default_keep_email_private | default('') | string | length > 0 %}
DEFAULT_KEEP_EMAIL_PRIVATE = {{ gitea_service.default_keep_email_private | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.default_allow_create_organization | default('') | string | length > 0 %}
DEFAULT_ALLOW_CREATE_ORGANIZATION = {{ gitea_service.default_allow_create_organization | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.default_user_is_restricted | default('') | string | length > 0 %}
DEFAULT_USER_IS_RESTRICTED = {{ gitea_service.default_user_is_restricted | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.default_user_visibility | default('') | string | length > 0 and
        gitea_service.default_user_visibility in ["public", "limited", "private"] %}
DEFAULT_USER_VISIBILITY = {{ gitea_service.default_user_visibility }}
  {% endif %}
  {% if gitea_service.allowed_user_visibility_modes | count > 0 %}
ALLOWED_USER_VISIBILITY_MODES = {{ gitea_service.allowed_user_visibility_modes | join(', ') }}
  {% endif %}
  {% if gitea_service.default_org_visibility | default('') | string | length > 0 and
        gitea_service.default_org_visibility in ["public", "limited", "private"] %}
DEFAULT_ORG_VISIBILITY = {{ gitea_service.default_org_visibility }}
  {% endif %}
  {% if gitea_service.default_org_member_visible | default('') | string | length > 0 %}
DEFAULT_ORG_MEMBER_VISIBLE = {{ gitea_service.default_org_member_visible | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.default_enable_dependencies | default('') | string | length > 0 %}
DEFAULT_ENABLE_DEPENDENCIES = {{ gitea_service.default_enable_dependencies | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.allow_cross_repository_dependencies | default('') | string | length > 0 %}
ALLOW_CROSS_REPOSITORY_DEPENDENCIES = {{ gitea_service.allow_cross_repository_dependencies | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_user_heatmap | default('') | string | length > 0 %}
ENABLE_USER_HEATMAP = {{ gitea_service.enable_user_heatmap | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.enable_timetracking | default('') | string | length > 0 %}
ENABLE_TIMETRACKING = {{ gitea_service.enable_timetracking | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.default_enable_timetracking | default('') | string | length > 0 %}
DEFAULT_ENABLE_TIMETRACKING = {{ gitea_service.default_enable_timetracking | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.default_allow_only_contributors_to_track_time | default('') | string | length > 0 %}
DEFAULT_ALLOW_ONLY_CONTRIBUTORS_TO_TRACK_TIME = {{ gitea_service.default_allow_only_contributors_to_track_time | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.no_reply_address | default('') | string | length > 0 %}
NO_REPLY_ADDRESS = {{ gitea_service.no_reply_address }}
  {% endif %}
  {% if gitea_service.show_registration_button | default('') | string | length > 0 %}
SHOW_REGISTRATION_BUTTON = {{ gitea_service.show_registration_button | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.show_milestones_dashboard_page | default('') | string | length > 0 %}
SHOW_MILESTONES_DASHBOARD_PAGE = {{ gitea_service.show_milestones_dashboard_page | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.auto_watch_new_repos | default('') | string | length > 0 %}
AUTO_WATCH_NEW_REPOS = {{ gitea_service.auto_watch_new_repos | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.auto_watch_on_changes | default('') | string | length > 0 %}
AUTO_WATCH_ON_CHANGES = {{ gitea_service.auto_watch_on_changes | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_service.user_delete_with_comments_max_time | default('') | string | length > 0 %}
USER_DELETE_WITH_COMMENTS_MAX_TIME = {{ gitea_service.user_delete_with_comments_max_time }}
  {% endif %}
  {% if gitea_service.valid_site_url_schemes | count > 0 %}
VALID_SITE_URL_SCHEMES = {{ gitea_service.valid_site_url_schemes | join(', ') }}
  {% endif %}
{% endif %}

{% if gitea_session is defined and
      gitea_session | count > 0 %}
[session]
  {% if gitea_session.provider | default('') | string | length > 0 and
        gitea_session.provider in ["memory", "file", "redis", "db", "mysql", "couchbase", "memcache", "postgres"] %}
PROVIDER = {{ gitea_session.provider }}
  {% endif %}
  {% if gitea_session.provider_config | default('') | string | length > 0 and
        gitea_session.provider_config != "memory" %}
PROVIDER_CONFIG = {{ gitea_session.provider_config }}
  {% endif %}
  {% if gitea_session.cookie_name | default('') | string | length > 0 %}
COOKIE_NAME = {{ gitea_session.cookie_name }}
  {% endif %}
  {% if gitea_session.cookie_secure | default('') | string | length > 0 %}
COOKIE_SECURE = {{ gitea_session.cookie_secure | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_session.gc_interval_time | default('') | string | length > 0 %}
GC_INTERVAL_TIME = {{ gitea_session.gc_interval_time }}
  {% endif %}
  {% if gitea_session.session_life_time | default('') | string | length > 0 %}
SESSION_LIFE_TIME = {{ gitea_session.session_life_time }}
  {% endif %}
  {% if gitea_session.same_site | default('') | string | length > 0 and
        gitea_session.same_site in ["none", "lax", "strict"] %}
SAME_SITE = {{ gitea_session.same_site }}
  {% endif %}
{% endif %}

{% if gitea_ssh is defined and
      gitea_ssh | count > 0 %}
  {% if gitea_ssh.minimum_key_sizes is defined and
        gitea_ssh.minimum_key_sizes | count > 0 %}
[ssh.minimum_key_sizes]
    {% if gitea_ssh.minimum_key_sizes.ed25519 | default('') | string | length > 0 %}
ED25519 = {{ gitea_ssh.minimum_key_sizes.ed25519 }}
    {% endif %}
    {% if gitea_ssh.minimum_key_sizes.ecdsa | default('') | string | length > 0 %}
ECDSA = {{ gitea_ssh.minimum_key_sizes.ecdsa }}
    {% endif %}
    {% if gitea_ssh.minimum_key_sizes.rsa | default('') | string | length > 0 %}
RSA = {{ gitea_ssh.minimum_key_sizes.rsa }}
    {% endif %}
    {% if gitea_ssh.minimum_key_sizes.dsa | default('') | string | length > 0 %}
DSA = {{ gitea_ssh.minimum_key_sizes.dsa }}
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_storage is defined and
      gitea_storage | count > 0 %}
[storage]
  {% if gitea_storage.storage_type | default('') | string | length > 0 %}
STORAGE_TYPE = {{ gitea_storage.storage_type }}
  {% endif %}
  {% if gitea_storage.repo_archive is defined and
        gitea_storage.repo_archive | count > 0 %}

[storage.repo-archive]
    {% if gitea_storage.repo_archive.storage_type | default('') | string | length > 0 %}
STORAGE_TYPE = {{ gitea_storage.repo_archive.storage_type }}
    {% endif %}
  {% endif %}
  {% if gitea_storage.packages is defined and
        gitea_storage.packages | count > 0 %}

[storage.packages]
    {% if gitea_storage.packages.storage_type | default('') | string | length > 0 %}
STORAGE_TYPE = {{ gitea_storage.packages.storage_type }}
    {% endif %}
  {% endif %}
  {% if gitea_storage.my_minio is defined and
        gitea_storage.my_minio | count > 0 %}

[storage.my_minio]
    {% if gitea_storage.my_minio.storage_type | default('') | string | length > 0 %}
STORAGE_TYPE = {{ gitea_storage.my_minio.storage_type }}
    {% endif %}
    {% if gitea_storage.my_minio.minio_endpoint | default('') | string | length > 0 %}
MINIO_ENDPOINT = {{ gitea_storage.my_minio.minio_endpoint }}
    {% endif %}
    {% if gitea_storage.my_minio.minio_access_key_id | default('') | string | length > 0 %}
MINIO_ACCESS_KEY_ID = {{ gitea_storage.my_minio.minio_access_key_id }}
    {% endif %}
    {% if gitea_storage.my_minio.minio_secret_access_key | default('') | string | length > 0 %}
MINIO_SECRET_ACCESS_KEY = {{ gitea_storage.my_minio.minio_secret_access_key }}
    {% endif %}
    {% if gitea_storage.my_minio.minio_bucket | default('') | string | length > 0 %}
MINIO_BUCKET = {{ gitea_storage.my_minio.minio_bucket }}
    {% endif %}
    {% if gitea_storage.my_minio.minio_location | default('') | string | length > 0 %}
MINIO_LOCATION = {{ gitea_storage.my_minio.minio_location }}
    {% endif %}
    {% if gitea_storage.my_minio.minio_use_ssl | default('') | string | length > 0 %}
MINIO_USE_SSL = {{ gitea_storage.my_minio.minio_use_ssl | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
    {% if gitea_storage.my_minio.minio_insecure_skip_verify | default('') | string | length > 0 %}
MINIO_INSECURE_SKIP_VERIFY = {{ gitea_storage.my_minio.minio_insecure_skip_verify | bodsch.core.config_bool(true_as='true', false_as='false') }}
    {% endif %}
  {% endif %}
  {% if gitea_storage.actions_log is defined and
        gitea_storage.actions_log | count > 0 %}

[storage.actions_log]
    {% if gitea_storage.actions_log.storage_type | default('') | string | length > 0 %}
STORAGE_TYPE = {{ gitea_storage.actions_log.storage_type }}
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_task is defined and
      gitea_task | count > 0 %}
[task]
  {% if gitea_task.queue_type | default('') | string | length > 0 and
        gitea_task.queue_type in ["channel", "redis"] %}
QUEUE_TYPE = {{ gitea_task.queue_type }}
    {% if gitea_task.queue_type == "channel" and
          gitea_task.queue_length | default('') | string | length > 0 %}
QUEUE_LENGTH = {{ gitea_task.queue_length }}
    {% endif %}
    {% if gitea_task.queue_type == "redis" and
          gitea_task.queue_conn_str | default('') | string | length > 0 %}
QUEUE_CONN_STR = {{ gitea_task.queue_conn_str }}
    {% endif %}
  {% endif %}
{% endif %}

{% if gitea_time is defined and
      gitea_time | count > 0 %}
[time]
  {% if gitea_time.format | default('') | string | length > 0 %}
FORMAT = {{ gitea_time.format }}
  {% endif %}
  {% if gitea_time.default_ui_location | default('') | string | length > 0 %}
DEFAULT_UI_LOCATION = {{ gitea_time.default_ui_location }}
  {% endif %}
{% endif %}

{% if gitea_ui is defined and
      gitea_ui | count > 0 %}
[ui]
  {% if gitea_ui.explore_paging_num | default('') | string | length > 0 %}
EXPLORE_PAGING_NUM = {{ gitea_ui.explore_paging_num }}
  {% endif %}
  {% if gitea_ui.issue_paging_num | default('') | string | length > 0 %}
ISSUE_PAGING_NUM = {{ gitea_ui.issue_paging_num }}
  {% endif %}
  {% if gitea_ui.feed_max_commit_num | default('') | string | length > 0 %}
FEED_MAX_COMMIT_NUM = {{ gitea_ui.feed_max_commit_num }}
  {% endif %}
  {% if gitea_ui.feed_paging_num | default('') | string | length > 0 %}
FEED_PAGING_NUM = {{ gitea_ui.feed_paging_num }}
  {% endif %}
  {% if gitea_ui.sitemap_paging_num | default('') | string | length > 0 %}
SITEMAP_PAGING_NUM = {{ gitea_ui.sitemap_paging_num }}
  {% endif %}
  {% if gitea_ui.graph_max_commit_num | default('') | string | length > 0 %}
GRAPH_MAX_COMMIT_NUM = {{ gitea_ui.graph_max_commit_num }}
  {% endif %}
  {% if gitea_ui.code_comment_lines | default('') | string | length > 0 %}
CODE_COMMENT_LINES = {{ gitea_ui.code_comment_lines }}
  {% endif %}
  {% if gitea_ui.theme_color_meta_tag | default('') | string | length > 0 %}
THEME_COLOR_META_TAG = `{{ gitea_ui.theme_color_meta_tag }}`
  {% endif %}
  {% if gitea_ui.max_display_file_size | default('') | string | length > 0 %}
MAX_DISPLAY_FILE_SIZE = {{ gitea_ui.max_display_file_size }}
  {% endif %}
  {% if gitea_ui.show_user_email | default('') | string | length > 0 %}
SHOW_USER_EMAIL = {{ gitea_ui.show_user_email | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_ui.default_theme | default('') | string | length > 0 %}
DEFAULT_THEME = {{ gitea_ui.default_theme }}
  {% endif %}
  {% if gitea_ui.themes | count > 0 %}
THEMES = {{ gitea_ui.themes | join(', ') }}
  {% endif %}
  {% if gitea_ui.reactions | count > 0 %}
REACTIONS = {{ gitea_ui.reactions | join(', ') }}
  {% endif %}
  {% if gitea_ui.custom_emojis | count > 0 %}
CUSTOM_EMOJIS = {{ gitea_ui.custom_emojis | join(', ') }}
  {% endif %}
  {% if gitea_ui.default_show_full_name | default('') | string | length > 0 %}
DEFAULT_SHOW_FULL_NAME = {{ gitea_ui.default_show_full_name | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_ui.search_repo_description | default('') | string | length > 0 %}
SEARCH_REPO_DESCRIPTION = {{ gitea_ui.search_repo_description | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_ui.use_service_worker | default('') | string | length > 0 %}
USE_SERVICE_WORKER = {{ gitea_ui.use_service_worker | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}
  {% if gitea_ui.only_show_relevant_repos | default('') | string | length > 0 %}
ONLY_SHOW_RELEVANT_REPOS = {{ gitea_ui.only_show_relevant_repos | bodsch.core.config_bool(true_as='true', false_as='false') }}
  {% endif %}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ui.admin]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Number of users that are displayed on one page
;USER_PAGING_NUM = 50
;;
;; Number of repos that are displayed on one page
;REPO_PAGING_NUM = 50
;;
;; Number of notices that are displayed on one page
;NOTICE_PAGING_NUM = 25
;;
;; Number of organizations that are displayed on one page
;ORG_PAGING_NUM = 50

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ui.user]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Number of repos that are displayed on one page
;REPO_PAGING_NUM = 15

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ui.meta]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;AUTHOR = Gitea - Git with a cup of tea
;DESCRIPTION = Gitea (Git with a cup of tea) is a painless self-hosted Git service written in Go
;KEYWORDS = go,git,self-hosted,gitea

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ui.notification]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Control how often the notification endpoint is polled to update the notification
;; The timeout will increase to MAX_TIMEOUT in TIMEOUT_STEPs if the notification count is unchanged
;; Set MIN_TIMEOUT to -1 to turn off
;MIN_TIMEOUT = 10s
;MAX_TIMEOUT = 60s
;TIMEOUT_STEP = 10s
;;
;; This setting determines how often the db is queried to get the latest notification counts.
;; If the browser client supports EventSource and SharedWorker, a SharedWorker will be used in preference to polling notification. Set to -1 to disable the EventSource
;EVENT_SOURCE_UPDATE_TIME = 10s

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ui.svg]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Whether to render SVG files as images.  If SVG rendering is disabled, SVG files are displayed as text and cannot be embedded in markdown files as images.
;ENABLE_RENDER = true

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[ui.csv]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Maximum allowed file size in bytes to render CSV files as table. (Set to 0 for no limit).
;MAX_FILE_SIZE = 524288
{% endif %}



{#


{% if gitea_cors is defined and
      gitea_cors | count > 0 %}
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[cors]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; More information about CORS can be found here: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#The_HTTP_response_headers
;; enable cors headers (disabled by default)
;ENABLED = false
;;
;; scheme of allowed requests
;SCHEME = http
;;
;; list of requesting domains that are allowed
;ALLOW_DOMAIN = *
;;
;; allow subdomains of headers listed above to request
;ALLOW_SUBDOMAIN = false
;;
;; list of methods allowed to request
;METHODS = GET,HEAD,POST,PUT,PATCH,DELETE,OPTIONS
;;
;; max time to cache response
;MAX_AGE = 10m
;;
;; allow request with credentials
;ALLOW_CREDENTIALS = false
;;
;; headers to permit
;HEADERS = Content-Type,User-Agent
;;
;; set X-FRAME-OPTIONS header
;X_FRAME_OPTIONS = SAMEORIGIN
{% endif %}

















{% if gitea_webhook is defined and
      gitea_webhook | count > 0 %}
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[webhook]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Hook task queue length, increase if webhook shooting starts hanging
;QUEUE_LENGTH = 1000
;;
;; Deliver timeout in seconds
;DELIVER_TIMEOUT = 5
;;
;; Webhook can only call allowed hosts for security reasons. Comma separated list, eg: external, 192.168.1.0/24, *.mydomain.com
;; Built-in: loopback (for localhost), private (for LAN/intranet), external (for public hosts on internet), * (for all hosts)
;; CIDR list: 1.2.3.0/8, 2001:db8::/32
;; Wildcard hosts: *.mydomain.com, 192.168.100.*
;; Since 1.15.7. Default to * for 1.15.x, external for 1.16 and later
;ALLOWED_HOST_LIST = external
;;
;; Allow insecure certification
;SKIP_TLS_VERIFY = false
;;
;; Number of history information in each page
;PAGING_NUM = 10
;;
;; Proxy server URL, support http://, https//, socks://, blank will follow environment http_proxy/https_proxy
;PROXY_URL =
;;
;; Comma separated list of host names requiring proxy. Glob patterns (*) are accepted; use ** to match all hosts.
;PROXY_HOSTS =
{% endif %}



{% if gitea_email is defined and
      gitea_email | count > 0 %}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[email.incoming]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; Enable handling of incoming emails.
;ENABLED = false
;;
;; The email address including the %{token} placeholder that will be replaced per user/action.
;; Example: incoming+%{token}@example.com
;; The placeholder must appear in the user part of the address (before the @).
;REPLY_TO_ADDRESS =
;;
;; IMAP server host
;HOST =
;;
;; IMAP server port
;PORT =
;;
;; Username of the receiving account
;USERNAME =
;;
;; Password of the receiving account
;PASSWORD =
;;
;; Whether the IMAP server uses TLS.
;USE_TLS = false
;;
;; If set to true, completely ignores server certificate validation errors. This option is unsafe.
;SKIP_TLS_VERIFY = true
;;
;; The mailbox name where incoming mail will end up.
;MAILBOX = INBOX
;;
;; Whether handled messages should be deleted from the mailbox.
;DELETE_HANDLED_MESSAGE = true
;;
;; Maximum size of a message to handle. Bigger messages are ignored. Set to 0 to allow every size.
;MAXIMUM_MESSAGE_SIZE = 10485760
{% endif %}


{% if gitea_attachment is defined and
      gitea_attachment | count > 0 %}

{% endif %}


{% if gitea_hightlight is defined and
      gitea_hightlight | count > 0 %}

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;[highlight.mapping]
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Extension mapping to highlight class
;; e.g. .toml=ini
{% endif %}



{% if gitea_lfs is defined and
      gitea_lfs | count > 0 %}
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; lfs storage will override storage
;;
;[lfs]
;STORAGE_TYPE = local
;;
;; Where your lfs files reside, default is data/lfs.
;PATH = data/lfs


{% endif %}





#}
